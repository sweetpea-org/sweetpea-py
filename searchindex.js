Search.setIndex({"docnames": ["api", "api/sweetpea", "api/sweetpea.backend", "api/sweetpea.base_constraint", "api/sweetpea.blocks", "api/sweetpea.combinatorics", "api/sweetpea.constraints", "api/sweetpea.core", "api/sweetpea.core.binary", "api/sweetpea.core.cnf", "api/sweetpea.core.generate", "api/sweetpea.core.generate.is_satisfiable", "api/sweetpea.core.generate.sample_non_uniform", "api/sweetpea.core.generate.sample_uniform", "api/sweetpea.core.generate.tools", "api/sweetpea.core.generate.tools.cryptominisat", "api/sweetpea.core.generate.tools.docker_utility", "api/sweetpea.core.generate.tools.executables", "api/sweetpea.core.generate.tools.return_code", "api/sweetpea.core.generate.tools.tool_error", "api/sweetpea.core.generate.tools.unigen", "api/sweetpea.core.generate.utility", "api/sweetpea.core.simple_sequence", "api/sweetpea.core.tests", "api/sweetpea.derivation_processor", "api/sweetpea.design_graph", "api/sweetpea.design_partitions", "api/sweetpea.encoding_diagram", "api/sweetpea.internal", "api/sweetpea.logic", "api/sweetpea.metrics", "api/sweetpea.primitives", "api/sweetpea.sampling_strategies", "api/sweetpea.sampling_strategies.base", "api/sweetpea.sampling_strategies.guided", "api/sweetpea.sampling_strategies.non_uniform", "api/sweetpea.sampling_strategies.uniform_combinatoric", "api/sweetpea.sampling_strategies.unigen", "api/sweetpea.server", "api/sweetpea.tests", "api/sweetpea.tests.sampling_strategies", "api/sweetpea.tests.sampling_strategies.test_base_strategy", "api/sweetpea.tests.sampling_strategies.test_guided", "api/sweetpea.tests.sampling_strategies.test_uc_solution_enumerator", "api/sweetpea.tests.sampling_strategies.test_uniform_combinatoric", "api/sweetpea.tests.test_backend", "api/sweetpea.tests.test_blocks", "api/sweetpea.tests.test_combinatorics", "api/sweetpea.tests.test_constraints", "api/sweetpea.tests.test_constraints_tss", "api/sweetpea.tests.test_derivation_processor", "api/sweetpea.tests.test_derivation_processor_multi_argument_transition", "api/sweetpea.tests.test_derivation_processor_tss", "api/sweetpea.tests.test_design_graph", "api/sweetpea.tests.test_design_partitions", "api/sweetpea.tests.test_encoding_diagram", "api/sweetpea.tests.test_internal", "api/sweetpea.tests.test_logic", "api/sweetpea.tests.test_primitives", "api/sweetpea.tests.test_sweetpea", "api/sweetpea.tests.test_utils", "guide", "guide/contributing", "guide/contributing/development", "guide/contributing/documentation", "guide/contributing/issues", "guide/contributing/py_style_guide", "guide/contributing/rest_style_guide", "guide/factorial_design", "guide/installation", "guide/usage", "index"], "filenames": ["api.rst", "api/sweetpea.rst", "api/sweetpea.backend.rst", "api/sweetpea.base_constraint.rst", "api/sweetpea.blocks.rst", "api/sweetpea.combinatorics.rst", "api/sweetpea.constraints.rst", "api/sweetpea.core.rst", "api/sweetpea.core.binary.rst", "api/sweetpea.core.cnf.rst", "api/sweetpea.core.generate.rst", "api/sweetpea.core.generate.is_satisfiable.rst", "api/sweetpea.core.generate.sample_non_uniform.rst", "api/sweetpea.core.generate.sample_uniform.rst", "api/sweetpea.core.generate.tools.rst", "api/sweetpea.core.generate.tools.cryptominisat.rst", "api/sweetpea.core.generate.tools.docker_utility.rst", "api/sweetpea.core.generate.tools.executables.rst", "api/sweetpea.core.generate.tools.return_code.rst", "api/sweetpea.core.generate.tools.tool_error.rst", "api/sweetpea.core.generate.tools.unigen.rst", "api/sweetpea.core.generate.utility.rst", "api/sweetpea.core.simple_sequence.rst", "api/sweetpea.core.tests.rst", "api/sweetpea.derivation_processor.rst", "api/sweetpea.design_graph.rst", "api/sweetpea.design_partitions.rst", "api/sweetpea.encoding_diagram.rst", "api/sweetpea.internal.rst", "api/sweetpea.logic.rst", "api/sweetpea.metrics.rst", "api/sweetpea.primitives.rst", "api/sweetpea.sampling_strategies.rst", "api/sweetpea.sampling_strategies.base.rst", "api/sweetpea.sampling_strategies.guided.rst", "api/sweetpea.sampling_strategies.non_uniform.rst", "api/sweetpea.sampling_strategies.uniform_combinatoric.rst", "api/sweetpea.sampling_strategies.unigen.rst", "api/sweetpea.server.rst", "api/sweetpea.tests.rst", "api/sweetpea.tests.sampling_strategies.rst", "api/sweetpea.tests.sampling_strategies.test_base_strategy.rst", "api/sweetpea.tests.sampling_strategies.test_guided.rst", "api/sweetpea.tests.sampling_strategies.test_uc_solution_enumerator.rst", "api/sweetpea.tests.sampling_strategies.test_uniform_combinatoric.rst", "api/sweetpea.tests.test_backend.rst", "api/sweetpea.tests.test_blocks.rst", "api/sweetpea.tests.test_combinatorics.rst", "api/sweetpea.tests.test_constraints.rst", "api/sweetpea.tests.test_constraints_tss.rst", "api/sweetpea.tests.test_derivation_processor.rst", "api/sweetpea.tests.test_derivation_processor_multi_argument_transition.rst", "api/sweetpea.tests.test_derivation_processor_tss.rst", "api/sweetpea.tests.test_design_graph.rst", "api/sweetpea.tests.test_design_partitions.rst", "api/sweetpea.tests.test_encoding_diagram.rst", "api/sweetpea.tests.test_internal.rst", "api/sweetpea.tests.test_logic.rst", "api/sweetpea.tests.test_primitives.rst", "api/sweetpea.tests.test_sweetpea.rst", "api/sweetpea.tests.test_utils.rst", "guide.rst", "guide/contributing.rst", "guide/contributing/development.rst", "guide/contributing/documentation.rst", "guide/contributing/issues.rst", "guide/contributing/py_style_guide.rst", "guide/contributing/rest_style_guide.rst", "guide/factorial_design.rst", "guide/installation.rst", "guide/usage.rst", "index.rst"], "titles": ["SweetPea API Documentation", "sweetpea package", "sweetpea.backend module", "sweetpea.base_constraint module", "sweetpea.blocks module", "sweetpea.combinatorics module", "sweetpea.constraints module", "sweetpea.core package", "sweetpea.core.binary module", "sweetpea.core.cnf module", "sweetpea.core.generate package", "sweetpea.core.generate.is_satisfiable module", "sweetpea.core.generate.sample_non_uniform module", "sweetpea.core.generate.sample_uniform module", "sweetpea.core.generate.tools package", "sweetpea.core.generate.tools.cryptominisat module", "sweetpea.core.generate.tools.docker_utility module", "sweetpea.core.generate.tools.executables module", "sweetpea.core.generate.tools.return_code module", "sweetpea.core.generate.tools.tool_error module", "sweetpea.core.generate.tools.unigen module", "sweetpea.core.generate.utility module", "sweetpea.core.simple_sequence module", "sweetpea.core.tests module", "sweetpea.derivation_processor module", "sweetpea.design_graph module", "sweetpea.design_partitions module", "sweetpea.encoding_diagram module", "sweetpea.internal module", "sweetpea.logic module", "sweetpea.metrics module", "sweetpea.primitives module", "sweetpea.sampling_strategies package", "sweetpea.sampling_strategies.base module", "sweetpea.sampling_strategies.guided module", "sweetpea.sampling_strategies.non_uniform module", "sweetpea.sampling_strategies.uniform_combinatoric module", "sweetpea.sampling_strategies.unigen module", "sweetpea.server module", "sweetpea.tests package", "sweetpea.tests.sampling_strategies package", "sweetpea.tests.sampling_strategies.test_base_strategy module", "sweetpea.tests.sampling_strategies.test_guided module", "sweetpea.tests.sampling_strategies.test_uc_solution_enumerator module", "sweetpea.tests.sampling_strategies.test_uniform_combinatoric module", "sweetpea.tests.test_backend module", "sweetpea.tests.test_blocks module", "sweetpea.tests.test_combinatorics module", "sweetpea.tests.test_constraints module", "sweetpea.tests.test_constraints_tss module", "sweetpea.tests.test_derivation_processor module", "sweetpea.tests.test_derivation_processor_multi_argument_transition module", "sweetpea.tests.test_derivation_processor_tss module", "sweetpea.tests.test_design_graph module", "sweetpea.tests.test_design_partitions module", "sweetpea.tests.test_encoding_diagram module", "sweetpea.tests.test_internal module", "sweetpea.tests.test_logic module", "sweetpea.tests.test_primitives module", "sweetpea.tests.test_sweetpea module", "sweetpea.tests.test_utils module", "SweetPea Guide", "Contributing to SweetPea", "Developing SweetPea", "Contributing to the Documentation", "Using the GitHub Issue Tracker", "Python Style Guide", "reStructuredText Style Guide", "Factorial Experiment Design", "Installation and Setup", "Using SweetPea", "SweetPea"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 38, 61, 62, 63, 64, 66, 67, 68, 69, 70], "technic": 0, "python": [0, 17, 28, 62, 63, 64], "packag": [0, 63], "which": [0, 1, 6, 7, 9, 12, 17, 26, 29, 31, 36, 64, 65, 66, 67, 68, 70], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 61, 63, 66, 68], "implement": [0, 4, 9, 22, 63, 66, 67], "languag": [0, 1, 31, 63, 67, 68, 70, 71], "subpackag": 0, "core": [0, 1, 4, 63], "data": [0, 1, 4, 9, 17, 21, 36], "represent": [0, 1, 3, 8, 31, 70], "extern": [0, 1, 14, 67], "util": [0, 1, 10, 18], "us": [0, 1, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 20, 21, 22, 28, 29, 31, 33, 61, 62, 63, 64, 66, 69], "submodul": [0, 21], "sampling_strategi": [0, 1, 39, 63, 70], "test": [0, 1, 6, 7, 11, 12, 21, 27, 63, 69, 70], "backend": [0, 1], "modul": [0, 1, 7, 10, 14, 32, 39, 40, 66, 71], "base_constraint": [0, 1], "block": [0, 1, 3, 6, 24, 26, 27, 30, 33, 34, 35, 36, 37, 38, 67], "combinator": [0, 1], "constraint": [0, 1, 3, 4, 7, 31, 36, 71], "derivation_processor": [0, 1], "design_graph": [0, 1], "design_partit": [0, 1], "encoding_diagram": [0, 1], "intern": [0, 1, 7, 22, 31], "logic": [0, 1, 6, 7, 9, 26, 66], "metric": [0, 1, 33, 36], "primit": [0, 1, 64, 68], "A": [0, 1, 4, 5, 6, 8, 9, 17, 21, 22, 67, 68], "note": [0, 1, 70], "deprec": [0, 1, 67], "server": [0, 1], "The": [1, 4, 5, 6, 7, 9, 12, 13, 16, 17, 21, 22, 29, 31, 36, 63, 64, 66, 67, 68, 70], "domain": [1, 31, 63, 68, 71], "specif": [1, 4, 21, 26, 30, 31, 63, 64, 66, 67, 68, 71], "program": [1, 68, 71], "allow": [1, 22, 66, 68], "random": [1, 70, 71], "experiment": [1, 4, 7, 30, 67, 68, 70, 71], "design": [1, 4, 6, 7, 24, 25, 26, 28, 30, 31, 36, 46, 48, 50, 61, 67, 70, 71], "synthesi": [1, 71], "trial": [1, 4, 6, 24, 27, 31, 33, 36, 71], "sequenc": [1, 4, 5, 6, 9, 22, 23, 31, 33, 36, 47, 70, 71], "from": [1, 4, 5, 6, 7, 9, 10, 12, 16, 17, 21, 28, 31, 36, 64, 66, 67, 68, 70, 71], "those": [1, 6, 7, 21, 66, 67, 70, 71], "fully_cross_block": [1, 6, 24, 70], "cross": [1, 4, 6, 9, 24, 25, 26, 31, 67, 68, 70], "require_complete_cross": [1, 4], "true": [1, 4, 6, 17, 20, 24, 31, 70], "cnf_fn": [1, 4], "function": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 66, 70, 71], "to_cnf_tseitin": [1, 4, 29], "return": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 66, 67, 70], "fulli": [1, 4, 6, 64, 66, 67, 68, 70], "meant": [1, 24, 31], "experi": [1, 4, 6, 31, 61, 71], "prefer": [1, 16, 66, 67], "mechan": [1, 10, 12, 22, 31, 70], "describ": [1, 9, 29, 31, 67, 68], "an": [1, 2, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 36, 62, 63, 66, 67, 68, 70, 71], "paramet": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 67], "list": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 16, 21, 22, 23, 24, 25, 28, 29, 31, 33, 36, 38, 66, 70], "factor": [1, 3, 4, 6, 24, 25, 26, 28, 31, 60, 71], "all": [1, 3, 4, 5, 6, 9, 22, 25, 31, 63, 66, 67, 68, 70], "when": [1, 3, 12, 16, 17, 19, 20, 21, 31, 36, 63, 65, 67, 70], "gener": [1, 3, 4, 6, 7, 22, 27, 34, 36, 63, 64, 66, 70, 71], "each": [1, 4, 5, 6, 8, 9, 12, 23, 24, 31, 36, 66, 67, 68, 70], "have": [1, 4, 6, 31, 62, 64, 66, 67, 68, 69, 70], "one": [1, 4, 6, 9, 16, 31, 36, 66, 67, 68, 70], "level": [1, 2, 3, 4, 6, 24, 26, 31, 63, 66], "produc": [1, 9, 12, 16, 18, 21, 31, 68, 70], "number": [1, 4, 6, 7, 8, 9, 17, 21, 29, 31, 33, 36, 67, 68, 70], "run": [1, 16, 17, 19, 20, 63, 64, 68, 70], "determin": [1, 4, 10, 11, 15, 17, 18, 31, 68, 70], "product": [1, 5, 9, 31], "If": [1, 4, 5, 6, 16, 20, 29, 31, 61, 66, 67, 68, 70, 71], "fals": [1, 8, 13, 15, 16, 17, 20, 37, 66], "can": [1, 3, 4, 5, 6, 7, 9, 12, 16, 17, 18, 20, 22, 31, 36, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "reduc": 1, "total": [1, 4, 5], "differ": [1, 31, 66, 68, 70], "combin": [1, 4, 5, 6, 9, 17, 21, 31, 66, 68, 70], "order": [1, 4, 66, 70], "suppli": [1, 31], "implicit": 1, "everi": [1, 67, 70], "should": [1, 9, 12, 16, 17, 31, 33, 63, 64, 66, 67, 69, 70], "appear": [1, 66, 68, 70], "onc": [1, 7, 36, 70], "deriv": [1, 6, 24, 26, 31], "impos": [1, 70], "addit": [1, 6, 9, 31, 67], "onli": [1, 4, 6, 7, 9, 17, 31, 36, 64, 66, 67, 68, 70], "ar": [1, 3, 4, 5, 6, 7, 9, 17, 21, 24, 26, 31, 36, 63, 64, 66, 67, 68, 69, 70, 71], "consist": [1, 6, 9, 31, 66, 67, 68, 70], "manual": [1, 63, 70], "via": [1, 7, 10, 29, 31, 36, 67, 69], "restrict": [1, 67], "whether": [1, 4, 10, 11, 15, 16, 17, 18, 21, 31, 70], "must": [1, 6, 7, 31, 63, 64, 67, 68, 70], "default": [1, 16, 17, 63, 67], "valu": [1, 5, 8, 9, 16, 17, 18, 21, 31, 66, 67, 68, 70], "appropri": [1, 12, 67, 70], "exclud": [1, 4, 6], "through": [1, 12, 13, 31, 63, 69, 70], "cnf": [1, 2, 6, 7, 10, 11, 12, 13, 14, 15, 21, 22, 29, 38], "convers": [1, 2, 29], "type": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 63, 67], "multiple_cross_block": 1, "multipl": [1, 4, 31, 66, 67, 68, 70], "similar": [1, 8, 9, 36, 66, 67, 70], "except": [1, 8, 16, 19, 20, 66, 67], "configur": [1, 4, 64], "repres": [1, 2, 4, 6, 7, 8, 9, 24, 25, 31, 36, 38], "maximum": 1, "among": [1, 9, 31], "individu": [1, 2, 3, 68], "least": [1, 31, 69], "refer": [1, 9, 16], "same": [1, 6, 31, 66, 67, 68, 70], "constrain": [1, 26, 29, 31, 68], "how": [1, 12, 28, 31, 36, 61, 62, 63, 66, 67, 70, 71], "chosen": 1, "across": [1, 4, 9, 21, 68, 70], "simplify_experi": [1, 70], "convert": [1, 2, 6, 7, 8, 9, 21, 22, 29, 31, 38, 70], "tupl": [1, 4, 6, 9, 21, 24, 28, 29, 31, 36], "where": [1, 5, 6, 8, 9, 31, 63, 66, 67, 70], "given": [1, 4, 5, 6, 9, 11, 12, 17, 20, 21, 22, 23, 25, 30, 31, 33, 36, 66, 67, 68, 70], "dict": [1, 2, 6, 21, 30, 33, 36], "These": [1, 6, 7, 9, 31, 64, 66, 67, 68], "call": [1, 3, 6, 7, 15, 20, 31, 34, 66, 68, 70, 71], "ani": [1, 4, 16, 21, 26, 28, 29, 31, 63, 67, 69, 70], "synthesize_tri": 1, "synthesize_trials_non_uniform": [1, 70], "synthesize_trials_uniform": [1, 70], "string": [1, 9, 17, 21, 31, 38, 67, 70], "sub": 1, "correspond": [1, 4, 6, 9, 31], "particular": [1, 63, 70], "simpl": [1, 16, 18, 19, 22, 27, 31, 68], "surfac": 1, "name": [1, 3, 4, 17, 31, 60, 66, 68, 70], "str": [1, 2, 9, 16, 19, 20, 21, 23, 28, 31, 34, 66, 70], "print_experi": [1, 70], "displai": [1, 67, 70], "human": 1, "friendli": 1, "form": [1, 7, 9, 21, 31, 66, 67, 70], "descript": [1, 4, 67, 71], "tabulate_experi": 1, "none": [1, 3, 6, 9, 15, 16, 17, 21, 22, 23, 27, 31, 34], "tabul": 1, "print": [1, 17, 27, 70], "output": [1, 8, 27, 64, 70], "tabl": [1, 67], "show": [1, 17, 68, 70], "absolut": [1, 67], "rel": [1, 34, 66], "frequenc": [1, 21], "option": [1, 9, 15, 16, 17, 21, 23, 31, 33, 67], "finish": [1, 67], "int": [1, 2, 4, 5, 6, 8, 9, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 33, 34, 35, 36, 37, 66, 67], "experiment_to_csv": 1, "file_prefix": 1, "export": [1, 7], "csv": 1, "file": [1, 12, 15, 20, 21, 31, 63, 64, 65, 70], "save": [1, 21], "separ": [1, 66, 67], "prefix": 1, "attach": 1, "sampl": [1, 4, 7, 9, 10, 12, 13, 14, 21, 31, 33, 34, 35, 36, 37, 63, 70], "synthes": [1, 70], "non": [1, 10, 12, 21, 63, 67, 70], "uniform": [1, 7, 12, 13, 20, 21, 70], "see": [1, 9, 29, 31, 63, 67, 68, 69, 70], "more": [1, 6, 9, 31, 66, 67, 68, 69, 70], "inform": [1, 5, 16, 24, 31, 61, 63, 66, 67, 68, 69, 70], "built": [1, 22, 23, 63, 71], "circumv": 1, "some": [1, 3, 12, 15, 17, 28, 31, 33, 64, 66, 67, 70], "shortcom": 1, "unigen": [1, 2, 7, 9, 10, 13, 14, 16, 17, 32, 38], "solv": [1, 7, 14, 15, 20, 21], "engin": 1, "work": [1, 4, 7, 36, 63, 64, 65, 69], "take": [1, 6, 12, 21, 31, 62, 63, 68, 70], "follow": [1, 4, 6, 7, 16, 31, 63, 65, 66, 67, 70], "step": [1, 6, 31, 36], "find": [1, 66, 67], "solut": [1, 7, 10, 12, 13, 21, 29, 33], "formula": [1, 4, 6, 7, 9, 10, 11, 15, 21, 27, 29], "add": [1, 6, 9, 66, 67, 70], "subsequ": [1, 24, 31, 66], "attempt": [1, 15], "repeat": [1, 24, 28, 70], "need": [1, 4, 6, 7, 17, 20, 22, 36, 63, 64, 67, 68, 70], "ideal": [1, 36], "method": [1, 4, 9, 21, 27, 31, 66, 67, 70], "handl": [1, 7, 22, 29, 63, 67], "problem": [1, 7, 9, 12, 13, 20, 21, 68], "so": [1, 6, 9, 16, 17, 24, 28, 31, 63, 64, 66, 67, 70], "replac": [1, 3, 9, 34], "point": [1, 12, 17, 31, 66, 67, 68], "we": [1, 6, 9, 16, 24, 31, 33, 36, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "better": [1, 22], "wai": [1, 6, 9, 28, 31, 66, 67, 69, 70], "around": [1, 9, 63], "s": [1, 4, 9, 12, 17, 20, 21, 23, 24, 28, 31, 62, 63, 64, 66, 67, 68, 70], "limit": [1, 66, 67, 70], "set": [1, 4, 5, 9, 12, 17, 21, 67, 68], "dictionari": [1, 30, 36], "map": [1, 6, 27, 71], "contain": [1, 4, 9, 16, 18, 20, 31, 67, 70], "per": [1, 4], "10": [1, 6, 27, 63], "class": [1, 2, 3, 4, 6, 9, 12, 16, 18, 19, 21, 22, 24, 25, 26, 29, 31, 33, 34, 35, 36, 37, 66, 70], "non_uniform": [1, 32, 70], "nonuniformsamplingstrategi": [1, 35, 70], "randomli": 1, "subject": [1, 29], "both": [1, 31, 64, 70], "implicitli": [1, 31, 67, 70], "explicitli": [1, 66, 67], "either": [1, 7, 8, 31, 63, 68], "singl": [1, 66, 68, 70], "cohes": 1, "result": [1, 4, 15, 16, 21, 34, 63, 64, 67, 68, 70], "decod": [1, 33], "someth": [1, 16, 31, 65, 66, 67, 70], "readabl": 1, "compat": [1, 7, 9, 12, 31, 38, 63, 66, 69], "psyneulink": 1, "effect": [1, 22, 67, 68], "progress": [1, 70], "straightforward": [1, 31], "mai": [1, 6, 9, 16, 31, 66, 67, 68, 70], "termin": [1, 64], "happen": 1, "you": [1, 9, 28, 31, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "try": 1, "get": [1, 6, 36, 63, 67, 69, 70], "initi": [1, 3, 6, 22, 31, 63, 67, 70], "For": [1, 4, 5, 8, 9, 12, 26, 27, 31, 63, 66, 67, 68, 70], "exampl": [1, 4, 5, 6, 8, 9, 24, 26, 27, 31, 63, 66, 67, 70], "1": [1, 4, 6, 8, 9, 21, 23, 24, 27, 28, 29, 31, 34, 66, 70], "length": [1, 12, 21, 29, 67], "satisfi": [1, 10, 11, 15, 21], "strategi": [1, 36, 63], "save_cnf": [1, 21], "filenam": [1, 21, 34], "write": [1, 21, 66, 70], "indic": [1, 4, 6, 9, 16, 17, 18, 24, 67], "dimac": [1, 9], "format": [1, 8, 9, 12, 67], "binari": [1, 7, 9], "simple_sequ": [1, 7], "base": [1, 2, 3, 4, 6, 9, 16, 18, 19, 20, 21, 22, 24, 25, 26, 29, 31, 32, 34, 35, 36, 37, 66, 70], "guid": [1, 31, 32, 62, 63, 69, 71], "uniform_combinator": [1, 32, 70], "test_backend": [1, 39], "test_block": [1, 39], "test_combinator": [1, 39], "test_constraint": [1, 39], "test_constraints_tss": [1, 39], "test_derivation_processor": [1, 39], "test_derivation_processor_multi_argument_transit": [1, 39], "test_derivation_processor_tss": [1, 39], "test_design_graph": [1, 39], "test_design_partit": [1, 39], "test_encoding_diagram": [1, 39], "test_intern": [1, 39], "test_log": [1, 39], "test_primit": [1, 39], "test_sweetpea": [1, 39], "test_util": [1, 39], "make": [2, 6, 7, 17, 21, 64, 65, 67, 68, 69], "request": [2, 6, 21, 62, 65], "lowlevelrequest": 2, "comparison": 2, "k": [2, 6, 9, 21, 23], "variabl": [2, 4, 6, 9, 17, 21, 27, 29, 31, 68, 70], "object": [2, 4, 9, 21, 24, 25, 26, 31, 33, 34, 36], "low": 2, "eq": [2, 6, 21, 24, 66], "lt": [2, 6, 21], "gt": [2, 21], "to_dict": 2, "suitabl": 2, "json": [2, 12, 21], "to_generation_request": 2, "backendrequest": [2, 4, 6], "fresh": [2, 6, 9, 12, 13, 21], "ll_request": 2, "full": [2, 17, 68, 70], "includ": [2, 4, 15, 31, 36, 63, 66, 67, 70], "argument": [2, 16, 22, 31, 66, 67, 70], "And": [2, 6, 29, 38], "get_cnfs_as_json": 2, "get_requests_as_json": 2, "get_requests_as_generation_request": 2, "abc": [3, 33], "interfac": [3, 63, 70], "abstract": [3, 4, 33, 67], "valid": [3, 6, 17, 36, 67], "t": [3, 4, 6, 9, 17, 23, 36, 50, 65, 66, 70], "complet": [3, 6, 21, 63, 66, 70], "isol": [3, 6], "dure": [3, 6, 31, 64, 70], "ensur": [3, 6, 31, 36, 64, 69, 70], "appli": [3, 4, 6, 31], "backend_request": [3, 6], "desugar": [3, 6], "accept": [3, 9, 33, 36, 63, 69], "shorthand": 3, "like": [3, 6, 9, 12, 22, 23, 24, 63, 66, 67, 68, 69, 70], "whole": [3, 66], "rather": [3, 6], "than": [3, 5, 6, 31, 67, 68, 69, 70], "pair": [3, 4, 6, 24, 31, 70], "respons": [3, 68], "construct": [3, 5, 31, 66, 67, 68, 70, 71], "them": [3, 6, 18, 30, 31, 67, 70], "desuagar": 3, "version": [3, 9, 12, 31, 63, 67, 69], "befor": [3, 22, 36, 67, 69, 70], "proced": 3, "variou": [4, 6, 18, 21, 30, 63, 71], "kind": [4, 33, 61, 68], "creat": [4, 9, 21, 29, 31, 63, 67, 68, 70], "factori": [4, 31, 61, 70, 71], "requir": [4, 6, 31, 63, 67, 69, 70], "defin": [4, 66, 70], "other": [4, 6, 9, 16, 17, 31, 33, 63, 67, 68, 70], "_must_": 4, "correctli": [4, 65, 67], "extract_basic_factor_nam": 4, "derivedlevel": [4, 6, 24, 28, 31, 66, 68, 70], "trials_per_sampl": 4, "analog": 4, "old": 4, "__fully_cross_s": 4, "variables_per_tri": 4, "present": [4, 67], "__design_s": 4, "grid_vari": 4, "grid": 4, "doe": [4, 29, 31, 66, 67, 70], "encod": [4, 9, 15, 27], "complex": [4, 31, 36, 70], "window": [4, 6, 17, 24, 31, 36, 70], "In": [4, 5, 9, 24, 31, 63, 66, 68, 70], "without": [4, 9, 22, 36, 63, 67, 68], "equival": [4, 9], "variables_per_sampl": 4, "altern": [4, 31, 64, 69], "state": [4, 6, 7, 20], "constitut": [4, 70], "independ": [4, 31, 68, 70], "support": [4, 7, 9, 12, 13, 17, 21, 22, 36, 64, 65, 66], "variables_for_factor": 4, "f": [4, 17, 29], "has_factor": 4, "first_variable_for_level": 4, "first": [4, 6, 9, 31, 61, 64, 66, 67, 68, 70], "index": [4, 6, 22, 24, 64, 67, 70], "0": [4, 5, 6, 8, 9, 21, 24, 29, 31, 34, 70], "factor_variables_for_tri": 4, "also": [4, 9, 12, 17, 22, 31, 36, 66, 67, 68, 69, 70], "variable_list_for_tri": 4, "pertain": [4, 30, 36], "stroop": [4, 27, 31, 68], "2": [4, 5, 6, 8, 9, 21, 23, 24, 27, 31, 34, 70], "congruenc": 4, "would": [4, 6, 9, 24, 27, 66, 67, 70], "3": [4, 5, 6, 9, 21, 23, 24, 27, 28, 63, 69, 70], "4": [4, 5, 6, 24, 27, 67, 68, 70], "5": [4, 6, 24, 27], "6": [4, 6, 24, 27, 34], "transit": [4, 6, 24, 31, 36], "were": [4, 9, 12, 24, 31, 67, 70], "involv": [4, 6, 7], "didn": 4, "empti": [4, 9, 15, 67, 70], "decode_vari": 4, "sat": [4, 7, 15, 20, 29, 34, 70], "associ": [4, 12], "union": [4, 6, 9, 28, 29, 31, 66], "simplelevel": [4, 6, 28, 31, 66, 70], "is_exclud": 4, "c": [4, 9, 29, 70], "d": [4, 17, 70], "meet": 4, "contraint": 4, "bool": [4, 11, 13, 15, 17, 18, 20, 31, 37, 38, 70], "filter_excluded_derived_level": 4, "l": [4, 5, 47], "filter": 4, "invalid": [4, 25], "build_backend_request": 4, "build": [4, 9, 25, 63, 67], "formerli": 4, "known": [4, 70], "__desugar": 4, "get_vari": 4, "trial_numb": [4, 31], "select": [4, 5, 31, 34, 68, 70], "moment": 4, "build_variable_list": 4, "level_pair": 4, "factor_in_cross": 4, "rearrage_sampl": 4, "calculate_samples_requir": 4, "fullycrossblock": [4, 6, 36], "mani": [4, 31, 36, 64, 67, 68, 70], "crossing_s": 4, "crossing_size_without_exclus": 4, "draw_design_graph": 4, "multiplecrossblock": [4, 6], "tocross": 4, "mention": 4, "extract_compon": 5, "size": [5, 6, 24, 28, 29, 31, 47], "n": [5, 9, 17, 21, 31, 34, 47, 50], "dimens": 5, "integ": [5, 8, 9, 15, 67], "less": 5, "extract": 5, "compon": 5, "24": [5, 27], "possibl": [5, 23, 31, 66, 67, 68, 70], "three": [5, 10, 21, 68, 70], "compute_jth_inversion_sequ": 5, "j": [5, 47], "permut": [5, 23], "element": [5, 8, 9, 22, 23, 28, 66, 70], "uniqu": [5, 6, 31, 67], "identifi": [5, 68, 70], "its": [5, 9, 17, 31, 66, 67, 70], "invers": 5, "comput": [5, 13, 23, 69], "th": 5, "found": [5, 16, 20, 36, 66, 70], "mathonlin": 5, "introductori": [5, 68], "richard": 5, "brualdi": 5, "isbn": 5, "978": 5, "0136020400": 5, "construct_permut": 5, "inversion_sequ": [5, 47], "compute_jth_combin": 5, "item": [5, 22, 66, 67], "choic": [5, 64, 66], "jth": 5, "out": [5, 17, 63, 67, 68, 70], "validate_factor_and_level": 6, "time": [6, 61, 68, 70], "instanc": [6, 7, 9, 21, 29, 31, 67, 70], "color": [6, 24, 27, 28, 31, 46, 49, 51, 52, 58, 67, 68, 70], "red": [6, 24, 27, 28, 31, 34, 64, 68, 70], "blue": [6, 24, 27, 28, 31, 68, 70], "text": [6, 24, 27, 28, 34, 51, 64, 66, 67, 68, 70], "confactor": [6, 24], "boolean": [6, 9], "var": [6, 7, 9, 21, 34], "iff": [6, 24, 29], "second": [6, 9, 34, 67, 70], "8": [6, 27], "third": [6, 15, 19, 20, 63, 66, 70], "9": [6, 27, 34, 63, 69, 70], "12": [6, 27], "fourth": 6, "13": [6, 9, 27], "16": [6, 27, 68], "sum": [6, 9], "15": [6, 27], "static": [6, 9, 21, 24, 31, 33, 34, 35, 36, 37, 63, 66], "fullycross": 6, "alloc": [6, 9], "contribut": [6, 61, 67], "aren": [6, 70], "continu": [6, 63], "taken": [6, 31], "intermedi": 6, "counter": 6, "numtrial": 6, "num_stat": 6, "new": [6, 9, 21, 29, 31, 62, 65, 67, 68, 70, 71], "entangl": 6, "queue": 6, "tocnf": 6, "newvar": 6, "e": [6, 8, 9, 24, 66, 67, 69], "g": [6, 9, 24, 66, 67], "25": 6, "do": [6, 7, 17, 18, 28, 31, 36, 63, 64, 66, 67, 69, 70], "hot": 6, "circl": 6, "etc": [6, 9, 26, 36, 66], "abov": [6, 24, 67, 68, 70], "collect": [6, 30, 67], "enforc": 6, "29": 6, "33": 6, "37": 6, "multiplecross": 6, "derived_idx": 6, "dependent_idx": 6, "depend": [6, 24, 31, 68, 69, 70], "indici": [6, 24], "processderiv": 6, "notic": 6, "feel": 6, "off": 6, "start": [6, 31, 61, 64, 70, 71], "onto": [6, 71], "Then": [6, 31], "directli": [6, 31, 64, 68, 70], "i": [6, 8, 17, 24, 50, 66], "Or": [6, 29, 33], "done": [6, 29, 31, 64, 66, 67, 70], "account": 6, "stride": [6, 31], "specifi": [6, 9, 16, 17, 21, 31, 67, 68], "withintri": [6, 24, 31], "grab": 6, "chunk": [6, 28], "look": [6, 66, 68, 70], "window1": 6, "window2": 6, "7": [6, 9, 27, 63, 69], "11": [6, 8, 27], "sinc": [6, 31, 69], "90": 6, "sure": 6, "correct": [6, 63, 66], "windows": 6, "One": [6, 70], "r": [6, 63, 69], "b": [6, 9, 70], "atmostkinarow": 6, "conlevel": [6, 24], "derivedfactor": [6, 31], "is_complex": [6, 31], "at_most_k_in_a_row": [6, 70], "pretti": 6, "llrequest": 6, "thing": [6, 31, 61, 66, 67], "here": [6, 9, 29], "match": 6, "up": [6, 17, 68, 70], "accord": [6, 15, 31], "sai": [6, 9, 66, 70], "want": [6, 9, 24, 33, 62, 67, 69, 70], "19": [6, 27], "wrap": 6, "re": [6, 67, 70], "had": [6, 66, 70], "been": [6, 67], "req": 6, "_kinarow": [6, 36], "apply_to_backend_request": 6, "at_least_k_in_a_row": 6, "complic": 6, "atleastkinarow": 6, "corner": 6, "case": [6, 17, 31, 66, 67, 68, 70], "exactly_k": 6, "exist": [6, 9, 12, 31, 66, 70], "exactli": [6, 31], "exactlyk": 6, "exactly_k_in_a_row": 6, "exactlykinarow": 6, "extract_simplelevel": 6, "recurs": 6, "deciph": 6, "basic": 6, "minimum_tri": 6, "minimumtri": 6, "fundament": [7, 9, 31], "actual": [7, 24, 63, 67], "anyth": [7, 31], "primarili": 7, "proposit": 7, "conjunct": [7, 9, 67], "normal": [7, 8, 9], "pass": [7, 31, 70], "solver": [7, 15], "compris": [7, 31, 70], "claus": [7, 9, 22], "turn": [7, 70], "veri": [7, 67], "express": 7, "easili": 7, "manipul": [7, 9, 64], "advanc": [7, 15, 22], "ship": 7, "cryptominisat": [7, 10, 14, 17, 20], "increment": [7, 15], "art": [7, 20], "almost": [7, 20], "sampler": [7, 20], "There": [7, 16, 66, 67, 68, 69, 70], "few": [7, 9, 15, 20, 31, 70], "well": [7, 36, 61, 68, 70], "small": [7, 29], "cnf_is_satisfi": [7, 11], "sample_non_uniform": [7, 10], "sample_non_uniform_from_specif": [7, 12], "sample_uniform": [7, 10], "combine_cnf_with_request": [7, 21], "assertiontyp": [7, 21], "generationrequest": [7, 12, 13, 21], "tool": [7, 10, 64], "is_satisfi": [7, 10], "alias": [8, 9, 66], "binarynumb": 8, "alia": [8, 21, 29, 31], "int_to_binari": 8, "digit": 8, "alphabet": 8, "instead": [8, 9, 31, 64, 66, 67, 70], "decim": 8, "0b10": 8, "0b1011": 8, "deal": [9, 70], "written": [9, 63, 64, 66, 67, 70], "wikipedia": [9, 29, 68, 70], "disjunct": 9, "liter": [9, 22, 66, 67], "otherwis": [9, 31, 70], "put": [9, 64, 66, 67, 70], "AND": 9, "ORs": [9, 29], "most": [9, 28, 64, 66, 67, 68, 69, 70], "revolv": 9, "essenti": [9, 70], "wrapper": [9, 67], "builtin": 9, "advantag": 9, "It": [9, 16, 17, 22, 31, 63, 69], "semant": [9, 31], "distinct": [9, 68], "read": [9, 17, 31, 61, 64, 67], "code": [9, 16, 17, 18, 22, 31, 63, 64, 65, 66, 70], "sensibl": 9, "obnoxi": 9, "becaus": [9, 66, 67, 70], "oper": [9, 24], "negat": 9, "error": [9, 16, 18, 19, 20, 31, 64, 67], "mypi": [9, 22, 31, 63, 66], "custom": [9, 22, 67], "behavior": [9, 67, 70], "sort": [9, 70], "micro": 9, "dsl": 9, "much": 9, "overhead": 9, "issu": [9, 15, 22, 62, 63, 66, 68, 70], "properti": [9, 31, 66, 67], "first_valu": [9, 22], "rest_valu": [9, 22], "simplesequ": [9, 22], "between": [9, 25, 31, 66, 68, 70, 71], "instanti": [9, 31, 70], "mode": 9, "raw": 9, "inner": 9, "outer": 9, "itself": [9, 16, 67, 70], "from_fresh": 9, "alreadi": [9, 67], "probabl": [9, 63, 70], "shouldn": 9, "deduc": [9, 17], "themselv": [9, 31], "legaci": [9, 12], "eventu": [9, 31], "remov": [9, 12, 17, 31, 66], "and_var": 9, "or_var": 9, "xor_var": 9, "xnor_var": 9, "origin": [9, 12, 31], "haskel": [9, 12], "doubleimpli": 9, "distribut": [9, 29], "v": 9, "as_dimacs_str": 9, "fresh_variable_count": 9, "standard": [9, 66], "detail": [9, 31, 66, 67, 70], "as_unigen_str": 9, "support_set_length": 9, "sampled_vari": 9, "modifi": [9, 63, 64, 67], "about": [9, 30, 31, 36, 63, 66, 67, 68], "extra": [9, 66], "line": [9, 16, 18, 19, 20, 67], "top": [9, 63, 66, 71], "ind": 9, "v1": 9, "v2": 9, "vn": 9, "place": [9, 17, 66, 67], "just": [9, 67, 70], "below": [9, 66, 67, 68], "begin": [9, 15, 61, 67], "p": [9, 29], "as_list_of_list_of_int": 9, "as_haskell_cnf": 9, "whose": [9, 31, 68], "check": [9, 15, 17, 18, 22, 31, 70], "two": [9, 31, 66, 67, 68, 69, 70], "get_fresh": 9, "get_n_fresh": 9, "next": [9, 67, 70], "sequenti": 9, "append": 9, "iter": [9, 21, 28], "prepend": 9, "set_to_zero": 9, "zero": [9, 68], "zero_out": 9, "in_list": 9, "set_to_on": 9, "assert_k_of_n": 9, "assert_k_less_than_n": 9, "assert_k_greater_than_n": 9, "pop_count": 9, "bit": [9, 17, 67, 70], "half_add": 9, "full_add": 9, "cin": 9, "ripple_carri": 9, "xs": [9, 23], "ys": 9, "interact": [10, 21, 68], "offer": 10, "uniformli": [10, 12, 13, 36], "docker_util": [10, 14], "execut": [10, 14, 16, 20], "As": [10, 14], "script": [10, 14, 34], "return_cod": [10, 14], "tool_error": [10, 14], "older": 12, "problemspecif": [12, 21], "input": [12, 15, 16, 20], "count": [12, 67], "initial_cnf": [12, 13, 21], "generation_request": [12, 13, 21], "spec": 12, "easier": [12, 67], "wa": [12, 15, 16, 22, 66, 67, 68, 70], "longer": 12, "necessari": [12, 17, 66, 67, 70], "sample_count": [13, 20, 21, 33, 34, 35, 36, 37], "use_dock": 13, "access": [14, 31, 70], "parti": [15, 19, 20, 63, 66], "process": [15, 20, 24, 31, 64, 67, 70], "cryptominisat_solv": 15, "input_fil": [15, 20], "docker_mod": [15, 20], "unsatisfi": 15, "encount": 15, "unknown": 15, "path": [15, 17, 20, 21, 63], "cryptominisat_is_satisfi": 15, "docker": [16, 20], "command": [16, 18, 19, 20], "discourag": [16, 66], "bundl": [16, 17], "org": [16, 17, 28, 29, 34, 69], "ex": [16, 17], "howev": [16, 29, 31, 36, 66, 70], "lag": 16, "behind": [16, 69], "respect": 16, "repositori": [16, 64, 69], "stai": 16, "cut": 16, "edg": 16, "default_docker_mode_on": 16, "dockerrunreturncod": 16, "returncodeenum": [16, 18], "invoc": 16, "special": [16, 63, 66], "invok": 16, "dockerdaemonerror": 16, "125": 16, "daemon": 16, "containedcommandcannotbeinvokederror": 16, "126": 16, "containedcommandcannotbefounderror": 16, "127": 16, "could": 16, "dockerrunerror": 16, "returncod": [16, 19, 20], "stderr": [16, 19, 20], "rais": [16, 19, 20, 31, 66], "fail": [16, 19, 20], "while": [16, 31, 64, 70], "docker_run": 16, "arg": [16, 31], "input_byt": 16, "byte": 16, "completedprocess": 16, "easi": [17, 68], "autom": 17, "download": [17, 20], "current": [17, 31, 63, 64, 66, 67, 68], "system": 17, "machin": 17, "latest": 17, "releas": [17, 63, 69], "rest": [17, 63, 64, 66, 67, 70], "accommod": [17, 67], "strictli": 17, "took": 17, "suss": 17, "github": [17, 62, 63, 64, 66, 69], "api": [17, 63, 64, 71], "figur": 17, "leav": [17, 21, 63, 66], "futur": 17, "But": [17, 66, 68, 70], "perhap": [17, 70], "To": [17, 22, 64, 66, 68, 69, 70], "py": [17, 64, 69], "h": 17, "help": [17, 27, 64, 65, 67, 68], "messag": [17, 64], "exit": 17, "bin_dir": 17, "bin": 17, "dir": 17, "directori": [17, 21, 63, 64], "instal": [17, 61], "appdir": 17, "user_data_dir": 17, "target": [17, 64], "darwin": 17, "linux": 17, "automat": [17, 20, 22, 63, 69, 70], "platform": [17, 63], "m": 17, "arm64": 17, "x86_64": 17, "amd64": 17, "tag": 17, "avail": 17, "asset": 17, "mostli": 17, "debug": 17, "download_unigen_env_var": 17, "unigen_download_if_miss": 17, "environ": [17, 64], "miss": [17, 20], "ye": 17, "y": 17, "No": 17, "unigen_exe_env_var": 17, "unigen_exe_dir": 17, "folder": 17, "store": 17, "thei": [17, 66, 67, 70], "go": [17, 67], "user": [17, 67, 70], "ensure_executable_avail": 17, "executable_path": 17, "download_if_miss": [17, 20], "companion": 17, "enumer": 18, "manag": [18, 21, 67], "enum": [18, 21], "sometim": [18, 66, 70], "necessarili": [18, 67], "subclass": [18, 31, 66], "against": 18, "conveni": [18, 28], "classmethod": 18, "has_valu": 18, "toolerror": [19, 20], "stdout": [19, 20], "unigenerror": 20, "call_unigen": 20, "local": [20, 21, 64, 69], "common": [21, 67], "variant": 21, "assert": 21, "from_json": 21, "assertion_typ": 21, "boolean_valu": 21, "sampletyp": 21, "nonuniform": 21, "issatisfi": 21, "sample_typ": 21, "field": [21, 29, 67], "regard": 21, "assign": [21, 65], "combine_and_save_cnf": 21, "augment": 21, "merg": 21, "temporary_cnf_fil": 21, "base_path": 21, "posixpath": 21, "pathlib": 21, "suffix": 21, "context": 21, "recommend": [21, 31, 61, 63, 64, 71], "delet": [21, 64], "scope": 21, "mutablesequ": 22, "_t": 22, "featur": [22, 33, 62, 65, 68], "desir": 22, "smartli": 22, "being": [22, 24, 67], "purpos": [22, 63, 67], "grant": 22, "abil": 22, "duplic": 22, "expect": [22, 46, 47, 70], "copi": [22, 64], "deepcopi": 22, "throughout": 22, "inspir": 22, "discuss": [22, 63, 67, 70], "4108": 22, "insert": [22, 67], "framework": 23, "xss": 23, "test_half_adder_dimac": 23, "test_full_adder_dimac": 23, "soln_full_add": 23, "compute_soln_full_add": 23, "incom": 23, "c_index": 23, "s_index": 23, "ripple_carry_dimac": 23, "num_digit": 23, "pop_count_dimac": 23, "permute_compl": 23, "to_posit": 23, "complement_func": 23, "invert": 23, "complement": 23, "That": [23, 70], "callabl": [23, 31], "assert_k_of_n_dimac": 23, "assert_all_k_of_n_dimac": 23, "pop_count_k_less_than_n_dimac": 23, "pop_count_all_k_less_than_n_dimac": 23, "derivationprocessor": 24, "generate_deriv": 24, "usag": [24, 28], "import": [24, 67, 68, 70], "op": 24, "con": [24, 27], "inclevel": 24, "inc": [24, 27], "ne": 24, "congruent": [24, 27, 70], "derivedidx": 24, "dependentidx": 24, "idx": 24, "relev": 24, "togeth": [24, 66, 68, 70], "structur": [24, 33, 63], "generate_argument_list": 24, "tup": 24, "shift_window": 24, "trial_siz": 24, "helper": [24, 27, 28], "shift": 24, "what": [24, 33, 36, 67, 70], "realli": 24, "assum": 24, "over": [24, 29], "interpret": 24, "derivationwindow": [24, 31, 68], "graph": [25, 34], "relationship": [25, 71], "designgraph": 25, "direct": [25, 31, 66], "primari": 25, "intent": [25, 36], "facilit": 25, "prevent": 25, "draw": [25, 68], "partit": 26, "subset": [26, 68], "designpartit": 26, "encapsul": 26, "get_crossed_factor": 26, "get_crossed_factors_deriv": 26, "get_uncrossed_factor": 26, "get_source_factor": 26, "get_uncrossed_basic_factor": 26, "get_uncrossed_basic_source_factor": 26, "get_uncrossed_basic_independent_factor": 26, "get_uncrossed_derived_factor": 26, "diagram": 27, "print_encoding_diagram": 27, "blk": 27, "chart": [27, 34], "outlin": 27, "visual": 27, "space": [27, 29, 66, 67], "14": 27, "17": 27, "18": 27, "20": [27, 63], "21": 27, "22": 27, "23": 27, "get_all_external_level_nam": 28, "get_all_internal_level_nam": 28, "get_all_level": 28, "handi": [28, 66, 67], "dandi": 28, "chunker": 28, "http": [28, 29, 34, 64, 66, 69], "stackoverflow": 28, "com": [28, 34, 64, 66, 69], "question": [28, 65], "312443": 28, "split": 28, "evenli": 28, "chunk_list": 28, "pairwis": 28, "recip": 28, "doc": [28, 31, 63, 64, 67], "librari": [28, 63, 66], "itertool": 28, "html": [28, 29, 63, 64], "s0": 28, "s1": 28, "s2": 28, "s3": 28, "interspers": 28, "delimit": 28, "seq": 28, "repeat_delimit": 28, "anoth": [28, 67, 68], "modif": 28, "5655708": 28, "eleg": 28, "input_list": 29, "q": 29, "Not": 29, "to_cnf_naiv": 29, "next_vari": 29, "pattern": 29, "en": 29, "wiki": 29, "conjunctive_normal_form": 29, "converting_from_first": 29, "order_log": 29, "naiv": 29, "mean": [29, 63, 67, 70], "exponenti": 29, "explos": 29, "upsid": 29, "introduc": [29, 68], "overal": 29, "to_cnf_switch": 29, "ANDs": 29, "switch": 29, "keep": [29, 66], "www": 29, "cs": 29, "jhu": 29, "edu": 29, "jason": 29, "tutori": [29, 70], "tseitin": 29, "transform": 29, "addtion": 29, "increas": 29, "linear": 29, "bound": 29, "tseytin_transform": 29, "cnf_to_json": 29, "collect_design_metr": 30, "attribut": 31, "mark": [31, 66, 67], "preserv": 31, "backward": [31, 63, 69], "favor": 31, "_": 31, "__": 31, "discret": [31, 68], "hold": [31, 70], "elselevel": 31, "consult": 31, "internal_nam": 31, "outsid": 31, "belong": 31, "weight": [31, 66], "external_nam": 31, "ha": [31, 66, 67, 70], "green": [31, 34, 68, 70], "initvar": [31, 66, 67], "intersect": 31, "potenti": [31, 67], "section": [31, 63, 64, 66, 67, 69], "get_dependent_cross_product": 31, "derive_level_from_level": 31, "other_level": 31, "initial_level": 31, "compos": [31, 68, 70], "come": [31, 66, 70], "flavor": 31, "simplefactor": 31, "constructor": 31, "alwai": [31, 64, 66, 67, 69], "dynam": 31, "rule": [31, 66, 67], "left": [31, 67], "alon": 31, "els": [31, 66, 67], "after": [31, 64, 66, 67, 70], "made": [31, 67, 68], "get_level": 31, "within": [31, 66, 67, 70], "first_level": 31, "is_deriv": 31, "isinst": 31, "programm": 31, "greater": 31, "guarante": 31, "checker": [31, 63, 66], "has_complex_window": 31, "consid": [31, 64, 67, 68], "applies_to_tri": 31, "transitionderiv": 31, "factor_nam": [31, 70], "has_level": 31, "membership": 31, "level_nam": 31, "natur": [31, 36, 68], "predic": [31, 70], "width": [31, 34], "preced": [31, 66, 67, 68], "vari": 31, "document": [31, 62, 63, 67, 70, 71], "carefulli": 31, "upon": [31, 70], "equal": [31, 67], "todo": [31, 33, 34, 67], "initial_factor_count": 31, "came": 31, "disregard": 31, "expans": 31, "caus": 31, "chang": [31, 63, 66], "first_factor": 31, "windowi": 31, "fn": 31, "withintrialderivationwindow": [31, 68, 70], "transitionderivationwindow": [31, 68], "immedi": [31, 67, 68, 70], "get_external_level_nam": 31, "get_internal_level_nam": 31, "simple_level": 31, "derived_level": 31, "else_level": 31, "within_tri": 31, "samplingresult": [33, 34, 35, 36, 37], "samplingstrategi": [33, 34, 35, 36, 37], "disabl": [33, 66], "flag": 33, "guidedsamplingstrategi": 34, "print_summari": 34, "flamegraph": 34, "graph_file_templ": 34, "head": 34, "link": 34, "stylesheet": 34, "css": 34, "href": 34, "cdn": 34, "jsdelivr": 34, "net": 34, "gh": [34, 63], "spiermar": 34, "d3": 34, "flame": 34, "dist": 34, "bodi": [34, 67], "div": 34, "id": 34, "javascript": 34, "src": 34, "d3j": 34, "v4": 34, "min": 34, "js": 34, "cdnj": 34, "cloudflar": 34, "ajax": 34, "lib": 34, "tip": [34, 67], "graph_data": 34, "960": 34, "datum": 34, "render": [34, 66, 67, 68], "unsat": 34, "tooltip": 34, "sampling_result": 34, "uniformcombinatoricsamplingstrategi": [36, 70], "biject": 36, "right": [36, 65, 67], "now": [36, 66, 70], "far": [36, 67], "think": 36, "doesn": [36, 65], "quit": 36, "yet": 36, "obstacl": 36, "still": [36, 67, 70], "reject": 36, "final": [36, 66, 70], "averag": 36, "On": 36, "satisfactori": 36, "ucsolutionenumer": 36, "solution_count": 36, "generate_random_sampl": 36, "sample_arrai": 36, "generate_sampl": 36, "sequence_numb": [36, 43], "generate_solution_vari": 36, "generate_trail_valu": 36, "unigensamplingstrategi": 37, "min_search": 37, "commun": 38, "build_cnf": 38, "is_cnf_still_sat": 38, "additional_claus": 38, "test_base_strategi": [39, 40], "test_guid": [39, 40], "test_uc_solution_enumer": [39, 40], "test_uniform_combinator": [39, 40], "test_decod": 41, "test_decode_with_transit": 41, "test_decode_with_general_window": 41, "test_decode_with_transition_and_only_positive_vari": 41, "test_committed_to_solut": 42, "test_generate_crossing_inst": 43, "test_generate_source_combin": 43, "test_generate_sample_basic_stroop": 43, "expected_solut": 43, "test_generate_sample_basic_stroop_vari": 43, "test_generate_sample_basic_stroop_uneven_color": 43, "test_validate_accepts_basic_factor": 44, "test_validate_accepts_derived_factors_with_simple_window": 44, "test_validate_rejects_exclude_constraint": 44, "test_validate_rejects_derived_factors_with_complex_window": 44, "test_example_count": 44, "test_constraint_viol": 44, "test_low_level_request_valid": 45, "yes_fn": [46, 58], "no_fn": [46, 58], "test_has_factor": 46, "test_fully_cross_block_first_variable_for_factor": 46, "test_fully_cross_block_first_variable_for_factor_with_color3": 46, "test_factor_variables_for_tri": 46, "test_factor_variables_for_trial_with_expanded_cross": 46, "test_variable_list_for_tri": 46, "test_block_get_vari": 46, "test_fully_cross_block_decode_vari": 46, "test_fully_cross_block_decode_variable_with_transition_first": 46, "test_fully_cross_block_decode_variable_with_general_window": 46, "test_fully_cross_block_trials_per_sampl": 46, "test_fully_cross_block_trials_per_sample_with_transition_in_cross": 46, "test_fully_cross_block_variables_per_tri": 46, "test_fully_cross_block_grid_vari": 46, "test_fully_cross_block_variables_per_sampl": 46, "test_fully_cross_block_variables_for_factor": 46, "test_fully_cross_block_crossing_size_with_exclud": 46, "test_fully_cross_block_crossing_size_with_overlapping_exclud": 46, "test_fully_cross_block_should_copy_input_list": 46, "test_build_variable_list_for_simple_factor": 46, "test_build_variable_list_for_complex_factor": 46, "test_build_variable_list_for_three_derived_level": 46, "test_extract_compon": 47, "test_compute_jth_inversion_sequ": 47, "test_construct_permut": 47, "expected_permut": 47, "test_compute_jth_combin": 47, "expected_combin": 47, "test_consist": 48, "test_consistency_with_transit": 48, "test_consistency_with_multiple_transit": 48, "test_consistency_with_transition_first_and_uneven_level_length": 48, "test_consistency_with_general_window": 48, "test_fully_cross_simpl": 48, "test_fully_cross_with_constraint": 48, "test_fully_cross_with_transition_in_design": 48, "test_fully_cross_with_uncrossed_simple_factor": 48, "test_fully_cross_with_transition_in_cross": 48, "test_deriv": 48, "test_derivation_with_transit": 48, "test_derivation_with_multiple_transit": 48, "test_derivation_with_three_level_transit": 48, "test_derivation_with_general_window": 48, "test_atmostkinarow_valid": 48, "test_atmostkinarow": 48, "test_atmostkinarow_disallows_k_of_zero": 48, "test_nomorethankinarow_sugar": 48, "test_atmostkinarow_with_transit": 48, "test_atmostkinarow_with_multiple_transit": 48, "test_exactlykinarow": 48, "test_exactlykinarow_disallows_k_of_zero": 48, "test_kinarow_with_bad_factor": 48, "test_exclud": 48, "test_exclude_with_transit": 48, "test_exclude_with_general_window": 48, "test_exclude_with_reduced_cross": 48, "test_exclude_with_three_derived_level": 48, "color_motion_congru": [49, 52], "motion": [49, 52], "color_motion_incongru": [49, 52], "test_fully_cross_with_three_factor": 49, "test_derivation_with_unusual_ord": 49, "two_con": 50, "two_not_con": 50, "test_generate_derivations_should_raise_error_if_fn_doesnt_return_a_boolean": 50, "test_generate_derivations_should_raise_error_if_some_factor_matches_multiple_level": 50, "test_generate_derivations_should_produce_warning_if_some_level_is_unreach": 50, "capsi": 50, "test_generate_derivations_within_tri": 50, "test_generate_derivations_transit": 50, "test_generate_derivations_with_multiple_transit": 50, "test_generate_derivations_with_window": 50, "test_generate_argument_list_with_within_tri": 50, "test_generate_argument_list_with_transit": 50, "test_shift_window": [50, 51], "one_differ": 51, "other_differ": 51, "test_generate_deriv": 51, "response_left": 52, "task": 52, "response_right": 52, "test_generate_derivations_with_transition_that_depends_on_derived_level": 52, "test_generate_derivations_when_derived_factor_precedes_depend": 52, "test_basic_graph": 53, "test_graph_path": 53, "test_get_crossed_factor": 54, "test_get_crossed_factors_deriv": 54, "test_get_uncrossed_basic_factor": 54, "test_get_uncrossed_basic_source_factor": 54, "test_get_uncrossed_basic_independent_factor": 54, "test_get_uncrossed_derived_factor": 54, "test_generate_encoding_diagram": 55, "test_generate_encoding_diagram_with_transit": 55, "test_generate_encoding_diagram_with_constraint_and_multiple_transit": 55, "test_generate_encoding_diagram_with_constraint_and_multiple_transitions_in_different_ord": 55, "test_generate_encoding_diagram_with_window": 55, "test_generate_encoding_diagram_with_window_with_strid": 55, "test_get_all_external_level_nam": 56, "test_interspers": 56, "test_to_cnf_na": 57, "test_to_cnf_switch": 57, "test_to_cnf_tseitin": 57, "test_cnf_to_json": 57, "test_eliminate_iff": 57, "test_apply_demorgan": 57, "test_distribute_ors_na": 57, "test_distribute_ors_switch": 57, "test_tseitin_rep_vari": 57, "test_tseitin_rep_not": 57, "test_tseitin_rep_if": 57, "test_tseitin_rep_iff": 57, "test_tseitin_rep_and": 57, "test_tseitin_rep_or": 57, "test_tseitin_cach": 57, "test_factor_valid": 58, "test_factor_get_level": 58, "test_factor_is_deriv": 58, "test_factor_has_complex_window": 58, "test_factor_applies_to_tri": 58, "test_derived_level_valid": 58, "test_derived_level_argument_list_expans": 58, "test_derived_level_get_dependent_cross_product": 58, "test_derived_level_equ": 58, "test_else_level": 58, "test_derived_level_get_dependent_cross_product_with_nest": 58, "test_base_window_valid": 58, "get_level_from_nam": 60, "brief": [61, 68], "overview": [61, 68], "your": [61, 64, 66, 68, 69, 70], "setup": 61, "did": 62, "discov": 62, "bug": [62, 65, 66], "idea": 62, "updat": [62, 63, 66, 69], "pull": 62, "part": [62, 64, 66, 67, 68, 70], "explain": [62, 63, 64, 66, 67, 68, 70], "develop": [62, 64, 66], "tracker": 62, "restructuredtext": 62, "style": 62, "unless": [63, 67], "incompat": 63, "newer": 63, "virtual": 63, "record": 63, "txt": [63, 69], "root": [63, 64], "pip": [63, 64, 69], "content": [63, 64], "integr": [63, 69], "regress": 63, "_build": [63, 64], "_sourc": [63, 64, 67], "sourc": [63, 64], "example_program": 63, "back": [63, 70], "end": [63, 66], "suit": 63, "perform": 63, "job": [63, 70], "yaml": 63, "live": 63, "fast": 63, "yml": 63, "slow": 63, "usual": [63, 66, 67, 70], "minut": 63, "failur": 63, "trigger": 63, "whenev": [63, 66], "push": 63, "close": [63, 67], "page": [63, 64, 67, 68], "publish": [63, 69], "websit": [63, 64, 67], "report": 63, "never": [63, 64, 66, 70], "web": [63, 64], "action": 63, "though": [63, 67, 70], "typecheck": 63, "inspect": 63, "review": [63, 70], "good": [63, 67], "faith": 63, "matter": [63, 66], "sweetpea": [64, 65, 66, 67, 68], "ll": [64, 66, 70], "sphinx": [64, 67], "theme": 64, "abl": [64, 68], "rtd": 64, "navig": 64, "locat": 64, "site": 64, "open": 64, "browser": 64, "brows": 64, "edit": 64, "success": 64, "pleas": [64, 69, 70], "strive": 64, "flawlessli": 64, "apidoc": 64, "Its": 64, "regener": 64, "subdirectori": 64, "docstr": [64, 66], "comment": [64, 67], "pdarragh": 64, "blob": 64, "master": 64, "ask": [65, 70], "seem": [65, 66, 67, 70], "dedic": 65, "click": 65, "button": 65, "label": 65, "submit": 65, "enhanc": 65, "clarif": [65, 67], "offici": 66, "relax": 66, "noth": [66, 70], "defer": 66, "intuit": 66, "120": 66, "charact": [66, 67], "80": [66, 67], "relat": 66, "statement": 66, "group": 66, "typevar": 66, "strort": 66, "u": 66, "star": 66, "explicit": 66, "item1": 66, "item2": 66, "dunder": 66, "__all__": 66, "__future__": 66, "ahead": 66, "qualifi": 66, "neat": 66, "annot": 66, "export1": 66, "export2": 66, "math": [66, 67], "dataclass": [66, 67], "numpi": 66, "my_packag": 66, "core_stuff": 66, "coreth": 66, "doubl": [66, 67], "quotat": [66, 67], "move": [66, 70], "awai": 66, "tripl": [66, 67], "own": [66, 67], "peopl": 66, "person": 66, "alex": 66, "27": 66, "taylor": 66, "32": 66, "cleopatra": 66, "2091": 66, "incorrect": 66, "sentenc": [66, 67], "grammat": 66, "spell": 66, "punctuat": 66, "materi": 66, "indent": [66, 67], "lead": 66, "strongli": 66, "linter": 66, "adorn": 66, "def": [66, 67, 70], "some_funct": 66, "arg1": [66, 67], "type1": [66, 67], "arg2": [66, 67], "type2": [66, 67], "returntyp": [66, 67], "func": [66, 67], "track": 66, "sentinel": 66, "generator_of_th": 66, "cool": 66, "paragraph": 66, "editor": 66, "highlight": [66, 67], "capit": 66, "margin": 66, "side": [66, 67], "has_cool_properti": 66, "bore": 66, "wrong": 66, "due": [66, 67], "insuffici": 66, "basi": 66, "simpli": [66, 69, 70], "ignor": 66, "complain": 66, "pylint": 66, "warn": [66, 67], "TO": 66, "encourag": [66, 67], "why": 66, "__post_init__": 66, "signatur": 66, "deviat": 66, "disallow": 66, "liskov": 66, "substitut": 66, "principl": 66, "parent": [66, 67], "perfectli": 66, "reason": 66, "fact": 66, "definit": [66, 67, 68], "unimport": 66, "abridg": 66, "clariti": 66, "address": 66, "9254": 66, "self": 66, "super": 66, "_weight": 66, "reach": 66, "beyond": 66, "confus": 66, "diabl": 66, "last": [66, 70], "restructredtext": 67, "past": 67, "80th": 67, "long": 67, "hyperlink": 67, "extend": 67, "column": 67, "greatest": 67, "extent": 67, "surround": 67, "colon": 67, "myclass": 67, "declar": [67, 71], "offset": 67, "dot": 67, "frequent": 67, "latex": 67, "intersphinx": 67, "resourc": [67, 68], "omit": 67, "varieti": 67, "ref": 67, "reference_link": 67, "referenc": 67, "titl": 67, "mod": 67, "module_nam": 67, "class_nam": 67, "func_nam": 67, "attr": 67, "attr_nam": 67, "decor": 67, "term": [67, 68], "term_nam": 67, "glossari": 67, "entri": 67, "insid": 67, "param": 67, "param_nam": 67, "__init__": 67, "four": 67, "goe": 67, "blank": 67, "rtype": 67, "convent": 67, "optional_language_specif": 67, "syntax": 67, "smart": 67, "break": 67, "toctre": 67, "tree": 67, "rst": 67, "regular": 67, "admonit": 67, "box": 67, "particularli": 67, "noteworthi": 67, "deprecated_vers": 67, "short": [67, 70], "tell": 67, "convei": 67, "interest": 67, "slightli": [67, 69], "unintuit": [67, 70], "mildli": 67, "surpris": 67, "danger": 67, "especi": 67, "mislead": 67, "gentl": 67, "remind": 67, "forgotten": 67, "critic": 67, "incomplet": 67, "middl": 67, "larger": 67, "sever": 67, "behav": 67, "surprisingli": 67, "unexpect": 67, "ones": [67, 70], "quot": 67, "foo": 67, "nifti": 67, "do_a_foo": 67, "even": 67, "further": 67, "tens": 67, "activ": 67, "voic": 67, "give": [67, 68, 70], "agenc": 67, "might": 67, "lh": 67, "rh": 67, "big": 67, "hand": 67, "ad": 67, "enough": [67, 68], "fit": 67, "thorough": 67, "degrad": 67, "explan": 67, "broader": 67, "releg": 67, "___": 67, "unlik": 67, "public": 67, "cannot": [67, 70], "fieldexampl": 67, "ident": [67, 70], "overrid": 67, "superclass": 67, "child": 67, "accompani": 67, "42": 67, "atyp": 67, "manner": [67, 68], "By": 67, "underscor": 67, "__str__": [67, 70], "our": [68, 70], "goal": 68, "bottom": 68, "decent": 68, "statist": 68, "unit": 68, "Such": [68, 71], "investig": 68, "studi": 68, "overkil": 68, "successfulli": 68, "plan": 68, "1935": 68, "ronald": 68, "fisher": 68, "book": 68, "credit": 68, "concept": 68, "null": 68, "hypothesi": 68, "finit": 68, "concret": 68, "imagin": 68, "conduct": [68, 70], "observ": 68, "particip": [68, 70], "word": [68, 70], "yellow": 68, "said": 68, "boundari": [68, 70], "artifici": 68, "measur": 68, "classifi": 68, "fraction": 68, "expos": [68, 71], "meaning": 68, "redund": 68, "partial": 68, "contrast": 68, "distinguish": 68, "repetit": 68, "minimum": 68, "obtain": 68, "suffici": 68, "evid": 68, "conclus": 68, "clone": 69, "later": [69, 70], "earlier": 69, "pypi": 69, "recent": [69, 70], "stabil": 69, "discover": 69, "git": 69, "cd": 69, "constantli": 70, "seek": 70, "improv": 70, "difficult": 70, "let": 70, "know": 70, "ve": 70, "decid": 70, "excel": 70, "great": 70, "familiar": 70, "okai": 70, "primer": 70, "articl": 70, "psycholog": 70, "delai": 70, "reaction": 70, "incongru": 70, "stimuli": 70, "seri": 70, "appar": 70, "realm": 70, "administ": 70, "parlanc": 70, "pseudo": 70, "ran": 70, "saw": 70, "simplifi": 70, "len": 70, "although": 70, "retriev": 70, "traceback": 70, "keyerror": 70, "simplest": 70, "f1": 70, "f2": 70, "readi": 70, "tricki": 70, "tri": 70, "accomplish": 70, "cover": 70, "capabl": 70, "best": 70, "resum": 70, "recal": 70, "align": 70, "recreat": 70, "depth": 70, "littl": 70, "trust": 70, "con_level": 70, "inc_level": 70, "arrang": 70, "verifi": 70, "hmm": 70, "mayb": 70, "don": 70, "too": 70, "row": 70, "six": 70, "arbitrarili": 70, "choos": 70, "previou": 70, "session": 70, "congruency_constraint": 70, "consecut": 70}, "objects": {"": [[1, 0, 0, "-", "sweetpea"]], "sweetpea": [[2, 0, 0, "-", "backend"], [3, 0, 0, "-", "base_constraint"], [4, 0, 0, "-", "blocks"], [5, 0, 0, "-", "combinatorics"], [6, 0, 0, "-", "constraints"], [7, 0, 0, "-", "core"], [24, 0, 0, "-", "derivation_processor"], [25, 0, 0, "-", "design_graph"], [26, 0, 0, "-", "design_partitions"], [27, 0, 0, "-", "encoding_diagram"], [1, 4, 1, "", "experiment_to_csv"], [1, 4, 1, "", "fully_cross_block"], [28, 0, 0, "-", "internal"], [29, 0, 0, "-", "logic"], [30, 0, 0, "-", "metrics"], [1, 4, 1, "", "multiple_cross_block"], [31, 0, 0, "-", "primitives"], [1, 4, 1, "", "print_experiments"], [32, 0, 0, "-", "sampling_strategies"], [1, 4, 1, "", "save_cnf"], [38, 0, 0, "-", "server"], [1, 4, 1, "", "simplify_experiments"], [1, 4, 1, "", "synthesize_trials"], [1, 4, 1, "", "synthesize_trials_non_uniform"], [1, 4, 1, "", "synthesize_trials_uniform"], [1, 4, 1, "", "tabulate_experiments"], [39, 0, 0, "-", "tests"]], "sweetpea.backend": [[2, 1, 1, "", "BackendRequest"], [2, 1, 1, "", "LowLevelRequest"]], "sweetpea.backend.BackendRequest": [[2, 2, 1, "", "get_cnfs_as_json"], [2, 2, 1, "", "get_requests_as_generation_requests"], [2, 2, 1, "", "get_requests_as_json"]], "sweetpea.backend.LowLevelRequest": [[2, 3, 1, "", "comparisons"], [2, 2, 1, "", "to_dict"], [2, 2, 1, "", "to_generation_request"]], "sweetpea.base_constraint": [[3, 1, 1, "", "Constraint"]], "sweetpea.base_constraint.Constraint": [[3, 2, 1, "", "apply"], [3, 2, 1, "", "desugar"], [3, 2, 1, "", "validate"]], "sweetpea.blocks": [[4, 1, 1, "", "Block"], [4, 1, 1, "", "FullyCrossBlock"], [4, 1, 1, "", "MultipleCrossBlock"]], "sweetpea.blocks.Block": [[4, 2, 1, "", "build_backend_request"], [4, 2, 1, "", "build_variable_list"], [4, 2, 1, "", "calculate_samples_required"], [4, 2, 1, "", "decode_variable"], [4, 2, 1, "", "extract_basic_factor_names"], [4, 2, 1, "", "factor_in_crossing"], [4, 2, 1, "", "factor_variables_for_trial"], [4, 2, 1, "", "filter_excluded_derived_levels"], [4, 2, 1, "", "first_variable_for_level"], [4, 2, 1, "", "get_variable"], [4, 2, 1, "", "grid_variables"], [4, 2, 1, "", "has_factor"], [4, 2, 1, "", "is_excluded"], [4, 2, 1, "", "rearrage_samples"], [4, 2, 1, "", "trials_per_sample"], [4, 2, 1, "", "variable_list_for_trial"], [4, 2, 1, "", "variables_for_factor"], [4, 2, 1, "", "variables_per_sample"], [4, 2, 1, "", "variables_per_trial"]], "sweetpea.blocks.FullyCrossBlock": [[4, 2, 1, "", "crossing_size"], [4, 2, 1, "", "crossing_size_without_exclusions"], [4, 2, 1, "", "draw_design_graph"], [4, 2, 1, "", "factor_in_crossing"], [4, 2, 1, "", "grid_variables"], [4, 2, 1, "", "trials_per_sample"], [4, 2, 1, "", "variables_per_trial"]], "sweetpea.blocks.MultipleCrossBlock": [[4, 2, 1, "", "crossing_size"], [4, 2, 1, "", "crossing_size_without_exclusions"], [4, 2, 1, "", "draw_design_graph"], [4, 2, 1, "", "factor_in_crossing"], [4, 2, 1, "", "grid_variables"], [4, 2, 1, "", "trials_per_sample"], [4, 2, 1, "", "variables_per_trial"]], "sweetpea.combinatorics": [[5, 4, 1, "", "compute_jth_combination"], [5, 4, 1, "", "compute_jth_inversion_sequence"], [5, 4, 1, "", "construct_permutation"], [5, 4, 1, "", "extract_components"]], "sweetpea.constraints": [[6, 1, 1, "", "AtLeastKInARow"], [6, 1, 1, "", "AtMostKInARow"], [6, 1, 1, "", "Consistency"], [6, 1, 1, "", "Derivation"], [6, 1, 1, "", "ExactlyK"], [6, 1, 1, "", "ExactlyKInARow"], [6, 1, 1, "", "Exclude"], [6, 1, 1, "", "FullyCross"], [6, 1, 1, "", "MinimumTrials"], [6, 1, 1, "", "MultipleCross"], [6, 4, 1, "", "at_least_k_in_a_row"], [6, 4, 1, "", "at_most_k_in_a_row"], [6, 4, 1, "", "exactly_k"], [6, 4, 1, "", "exactly_k_in_a_row"], [6, 4, 1, "", "exclude"], [6, 4, 1, "", "minimum_trials"], [6, 4, 1, "", "validate_factor_and_level"]], "sweetpea.constraints.AtLeastKInARow": [[6, 2, 1, "", "apply_to_backend_request"]], "sweetpea.constraints.AtMostKInARow": [[6, 2, 1, "", "apply_to_backend_request"]], "sweetpea.constraints.Consistency": [[6, 2, 1, "", "apply"], [6, 2, 1, "", "validate"]], "sweetpea.constraints.Derivation": [[6, 2, 1, "", "apply"], [6, 2, 1, "", "is_complex"], [6, 2, 1, "", "validate"]], "sweetpea.constraints.ExactlyK": [[6, 2, 1, "", "apply_to_backend_request"]], "sweetpea.constraints.ExactlyKInARow": [[6, 2, 1, "", "apply_to_backend_request"]], "sweetpea.constraints.Exclude": [[6, 2, 1, "", "apply"], [6, 2, 1, "", "extract_simplelevel"], [6, 2, 1, "", "validate"]], "sweetpea.constraints.FullyCross": [[6, 2, 1, "", "apply"], [6, 2, 1, "", "validate"]], "sweetpea.constraints.MinimumTrials": [[6, 2, 1, "", "apply"], [6, 2, 1, "", "validate"]], "sweetpea.constraints.MultipleCross": [[6, 2, 1, "", "apply"], [6, 2, 1, "", "validate"]], "sweetpea.core": [[8, 0, 0, "-", "binary"], [9, 0, 0, "-", "cnf"], [10, 0, 0, "-", "generate"], [22, 0, 0, "-", "simple_sequence"], [23, 0, 0, "-", "tests"]], "sweetpea.core.binary": [[8, 5, 1, "", "BinaryNumber"], [8, 4, 1, "", "int_to_binary"]], "sweetpea.core.cnf": [[9, 1, 1, "", "CNF"], [9, 1, 1, "", "Clause"], [9, 1, 1, "", "Var"]], "sweetpea.core.cnf.CNF": [[9, 2, 1, "", "and_vars"], [9, 2, 1, "", "append"], [9, 2, 1, "", "as_dimacs_string"], [9, 2, 1, "", "as_haskell_cnf"], [9, 2, 1, "", "as_list_of_list_of_ints"], [9, 2, 1, "", "as_unigen_string"], [9, 2, 1, "", "assert_k_greater_than_n"], [9, 2, 1, "", "assert_k_less_than_n"], [9, 2, 1, "", "assert_k_of_n"], [9, 2, 1, "", "distribute"], [9, 2, 1, "", "from_fresh"], [9, 2, 1, "", "full_adder"], [9, 2, 1, "", "get_fresh"], [9, 2, 1, "", "get_n_fresh"], [9, 2, 1, "", "half_adder"], [9, 2, 1, "", "or_vars"], [9, 2, 1, "", "pop_count"], [9, 2, 1, "", "prepend"], [9, 2, 1, "", "ripple_carry"], [9, 2, 1, "", "set_to_one"], [9, 2, 1, "", "set_to_zero"], [9, 2, 1, "", "xnor_vars"], [9, 2, 1, "", "xor_vars"], [9, 2, 1, "", "zero_out"]], "sweetpea.core.cnf.Var": [[9, 6, 1, "", "value"]], "sweetpea.core.generate": [[11, 0, 0, "-", "is_satisfiable"], [12, 0, 0, "-", "sample_non_uniform"], [13, 0, 0, "-", "sample_uniform"], [14, 0, 0, "-", "tools"], [21, 0, 0, "-", "utility"]], "sweetpea.core.generate.is_satisfiable": [[11, 4, 1, "", "cnf_is_satisfiable"]], "sweetpea.core.generate.sample_non_uniform": [[12, 4, 1, "", "sample_non_uniform"], [12, 4, 1, "", "sample_non_uniform_from_specification"]], "sweetpea.core.generate.sample_uniform": [[13, 4, 1, "", "sample_uniform"]], "sweetpea.core.generate.tools": [[15, 0, 0, "-", "cryptominisat"], [16, 0, 0, "-", "docker_utility"], [17, 0, 0, "-", "executables"], [18, 0, 0, "-", "return_code"], [19, 0, 0, "-", "tool_error"], [20, 0, 0, "-", "unigen"]], "sweetpea.core.generate.tools.cryptominisat": [[15, 4, 1, "", "cryptominisat_is_satisfiable"], [15, 4, 1, "", "cryptominisat_solve"]], "sweetpea.core.generate.tools.docker_utility": [[16, 5, 1, "", "DEFAULT_DOCKER_MODE_ON"], [16, 7, 1, "", "DockerRunError"], [16, 1, 1, "", "DockerRunReturnCode"], [16, 4, 1, "", "docker_run"]], "sweetpea.core.generate.tools.docker_utility.DockerRunReturnCode": [[16, 3, 1, "", "ContainedCommandCannotBeFoundError"], [16, 3, 1, "", "ContainedCommandCannotBeInvokedError"], [16, 3, 1, "", "DockerDaemonError"]], "sweetpea.core.generate.tools.executables": [[17, 5, 1, "", "DOWNLOAD_UNIGEN_ENV_VAR"], [17, 5, 1, "", "UNIGEN_EXE_ENV_VAR"], [17, 4, 1, "", "ensure_executable_available"]], "sweetpea.core.generate.tools.return_code": [[18, 1, 1, "", "ReturnCodeEnum"]], "sweetpea.core.generate.tools.return_code.ReturnCodeEnum": [[18, 2, 1, "", "has_value"]], "sweetpea.core.generate.tools.tool_error": [[19, 7, 1, "", "ToolError"]], "sweetpea.core.generate.tools.unigen": [[20, 7, 1, "", "UnigenError"], [20, 4, 1, "", "call_unigen"]], "sweetpea.core.generate.utility": [[21, 1, 1, "", "AssertionType"], [21, 1, 1, "", "GenerationRequest"], [21, 1, 1, "", "ProblemSpecification"], [21, 1, 1, "", "SampleType"], [21, 1, 1, "", "Solution"], [21, 4, 1, "", "combine_and_save_cnf"], [21, 4, 1, "", "combine_cnf_with_requests"], [21, 4, 1, "", "save_cnf"], [21, 4, 1, "", "temporary_cnf_file"]], "sweetpea.core.generate.utility.AssertionType": [[21, 3, 1, "", "EQ"], [21, 3, 1, "", "GT"], [21, 3, 1, "", "LT"], [21, 2, 1, "", "from_json"]], "sweetpea.core.generate.utility.GenerationRequest": [[21, 3, 1, "", "assertion_type"], [21, 3, 1, "", "boolean_values"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "k"]], "sweetpea.core.generate.utility.ProblemSpecification": [[21, 3, 1, "", "cnf"], [21, 3, 1, "", "fresh"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "requests"], [21, 3, 1, "", "sample_count"], [21, 3, 1, "", "sample_type"], [21, 3, 1, "", "support"]], "sweetpea.core.generate.utility.SampleType": [[21, 3, 1, "", "IsSatisfiable"], [21, 3, 1, "", "NonUniform"], [21, 3, 1, "", "Uniform"], [21, 2, 1, "", "from_json"]], "sweetpea.core.generate.utility.Solution": [[21, 3, 1, "", "assignment"], [21, 3, 1, "", "frequency"]], "sweetpea.core.simple_sequence": [[22, 1, 1, "", "SimpleSequence"]], "sweetpea.core.simple_sequence.SimpleSequence": [[22, 2, 1, "", "insert"]], "sweetpea.core.tests": [[23, 4, 1, "", "assert_all_k_of_n_dimacs"], [23, 4, 1, "", "assert_k_of_n_dimacs"], [23, 4, 1, "", "compute_soln_full_adder"], [23, 4, 1, "", "permute_complements"], [23, 4, 1, "", "pop_count_all_k_less_than_n_dimacs"], [23, 4, 1, "", "pop_count_dimacs"], [23, 4, 1, "", "pop_count_k_less_than_n_dimacs"], [23, 4, 1, "", "ripple_carry_dimacs"], [23, 4, 1, "", "sequence"], [23, 4, 1, "", "soln_full_adder"], [23, 4, 1, "", "test_full_adder_dimacs"], [23, 4, 1, "", "test_half_adder_dimacs"]], "sweetpea.derivation_processor": [[24, 1, 1, "", "DerivationProcessor"]], "sweetpea.derivation_processor.DerivationProcessor": [[24, 2, 1, "", "generate_argument_list"], [24, 2, 1, "", "generate_derivations"], [24, 2, 1, "", "shift_window"]], "sweetpea.design_graph": [[25, 1, 1, "", "DesignGraph"]], "sweetpea.design_graph.DesignGraph": [[25, 2, 1, "", "draw"]], "sweetpea.design_partitions": [[26, 1, 1, "", "DesignPartitions"]], "sweetpea.design_partitions.DesignPartitions": [[26, 2, 1, "", "get_crossed_factors"], [26, 2, 1, "", "get_crossed_factors_derived"], [26, 2, 1, "", "get_source_factors"], [26, 2, 1, "", "get_uncrossed_basic_factors"], [26, 2, 1, "", "get_uncrossed_basic_independent_factors"], [26, 2, 1, "", "get_uncrossed_basic_source_factors"], [26, 2, 1, "", "get_uncrossed_derived_factors"], [26, 2, 1, "", "get_uncrossed_factors"]], "sweetpea.encoding_diagram": [[27, 4, 1, "", "print_encoding_diagram"]], "sweetpea.internal": [[28, 4, 1, "", "chunk"], [28, 4, 1, "", "chunk_list"], [28, 4, 1, "", "get_all_external_level_names"], [28, 4, 1, "", "get_all_internal_level_names"], [28, 4, 1, "", "get_all_levels"], [28, 4, 1, "", "intersperse"], [28, 4, 1, "", "pairwise"]], "sweetpea.logic": [[29, 1, 1, "", "And"], [29, 1, 1, "", "If"], [29, 1, 1, "", "Iff"], [29, 1, 1, "", "Not"], [29, 1, 1, "", "Or"], [29, 4, 1, "", "cnf_to_json"], [29, 4, 1, "", "to_cnf_naive"], [29, 4, 1, "", "to_cnf_switching"], [29, 4, 1, "", "to_cnf_tseitin"]], "sweetpea.logic.And": [[29, 3, 1, "", "input_list"]], "sweetpea.logic.If": [[29, 3, 1, "", "p"], [29, 3, 1, "", "q"]], "sweetpea.logic.Iff": [[29, 3, 1, "", "p"], [29, 3, 1, "", "q"]], "sweetpea.logic.Not": [[29, 3, 1, "", "c"]], "sweetpea.logic.Or": [[29, 3, 1, "", "input_list"]], "sweetpea.metrics": [[30, 4, 1, "", "collect_design_metrics"]], "sweetpea.primitives": [[31, 1, 1, "", "DerivationWindow"], [31, 1, 1, "", "DerivedFactor"], [31, 1, 1, "", "DerivedLevel"], [31, 1, 1, "", "ElseLevel"], [31, 1, 1, "", "Factor"], [31, 1, 1, "", "Level"], [31, 1, 1, "", "SimpleFactor"], [31, 1, 1, "", "SimpleLevel"], [31, 3, 1, "", "Transition"], [31, 1, 1, "", "TransitionDerivationWindow"], [31, 3, 1, "", "Window"], [31, 3, 1, "", "WithinTrial"], [31, 1, 1, "", "WithinTrialDerivationWindow"], [31, 4, 1, "", "derived_level"], [31, 4, 1, "", "else_level"], [31, 4, 1, "", "factor"], [31, 4, 1, "", "get_external_level_name"], [31, 4, 1, "", "get_internal_level_name"], [31, 4, 1, "", "simple_level"], [31, 4, 1, "", "transition"], [31, 4, 1, "", "window"], [31, 4, 1, "", "within_trial"]], "sweetpea.primitives.DerivationWindow": [[31, 6, 1, "", "args"], [31, 3, 1, "", "factors"], [31, 6, 1, "", "first_factor"], [31, 6, 1, "", "fn"], [31, 3, 1, "", "initial_factor_count"], [31, 6, 1, "", "is_complex"], [31, 3, 1, "", "predicate"], [31, 6, 1, "", "size"], [31, 3, 1, "", "stride"], [31, 3, 1, "", "width"]], "sweetpea.primitives.DerivedFactor": [[31, 6, 1, "", "first_level"], [31, 2, 1, "", "get_level"], [31, 3, 1, "", "levels"]], "sweetpea.primitives.DerivedLevel": [[31, 2, 1, "", "get_dependent_cross_product"], [31, 3, 1, "", "weight"], [31, 3, 1, "", "window"]], "sweetpea.primitives.ElseLevel": [[31, 2, 1, "", "derive_level_from_levels"], [31, 3, 1, "", "weight"]], "sweetpea.primitives.Factor": [[31, 2, 1, "", "applies_to_trial"], [31, 6, 1, "", "factor_name"], [31, 6, 1, "", "first_level"], [31, 2, 1, "", "get_level"], [31, 6, 1, "", "has_complex_window"], [31, 2, 1, "", "has_level"], [31, 3, 1, "", "initial_levels"], [31, 2, 1, "", "is_derived"], [31, 3, 1, "", "levels"], [31, 3, 1, "", "name"]], "sweetpea.primitives.Level": [[31, 6, 1, "", "external_name"], [31, 3, 1, "", "factor"], [31, 3, 1, "", "internal_name"], [31, 3, 1, "", "name"], [31, 6, 1, "", "weight"]], "sweetpea.primitives.SimpleFactor": [[31, 6, 1, "", "first_level"], [31, 2, 1, "", "get_level"], [31, 3, 1, "", "levels"]], "sweetpea.primitives.SimpleLevel": [[31, 3, 1, "", "weight"]], "sweetpea.primitives.TransitionDerivationWindow": [[31, 3, 1, "", "stride"], [31, 3, 1, "", "width"]], "sweetpea.primitives.WithinTrialDerivationWindow": [[31, 3, 1, "", "stride"], [31, 3, 1, "", "width"]], "sweetpea.sampling_strategies": [[33, 0, 0, "-", "base"], [34, 0, 0, "-", "guided"], [35, 0, 0, "-", "non_uniform"], [36, 0, 0, "-", "uniform_combinatoric"], [37, 0, 0, "-", "unigen"]], "sweetpea.sampling_strategies.base": [[33, 1, 1, "", "SamplingResult"], [33, 1, 1, "", "SamplingStrategy"]], "sweetpea.sampling_strategies.base.SamplingStrategy": [[33, 2, 1, "", "decode"], [33, 2, 1, "", "sample"]], "sweetpea.sampling_strategies.guided": [[34, 1, 1, "", "Flamegraph"], [34, 1, 1, "", "GuidedSamplingStrategy"]], "sweetpea.sampling_strategies.guided.Flamegraph": [[34, 3, 1, "", "GRAPH_FILE_TEMPLATE"], [34, 2, 1, "", "generate"]], "sweetpea.sampling_strategies.guided.GuidedSamplingStrategy": [[34, 2, 1, "", "print_summary"], [34, 2, 1, "", "sample"]], "sweetpea.sampling_strategies.non_uniform": [[35, 1, 1, "", "NonUniformSamplingStrategy"]], "sweetpea.sampling_strategies.non_uniform.NonUniformSamplingStrategy": [[35, 2, 1, "", "sample"]], "sweetpea.sampling_strategies.uniform_combinatoric": [[36, 1, 1, "", "UCSolutionEnumerator"], [36, 1, 1, "", "UniformCombinatoricSamplingStrategy"]], "sweetpea.sampling_strategies.uniform_combinatoric.UCSolutionEnumerator": [[36, 2, 1, "", "generate_random_sample"], [36, 2, 1, "", "generate_sample"], [36, 2, 1, "", "generate_solution_variables"], [36, 2, 1, "", "generate_trail_values"], [36, 2, 1, "", "solution_count"]], "sweetpea.sampling_strategies.uniform_combinatoric.UniformCombinatoricSamplingStrategy": [[36, 2, 1, "", "sample"]], "sweetpea.sampling_strategies.unigen": [[37, 1, 1, "", "UnigenSamplingStrategy"]], "sweetpea.sampling_strategies.unigen.UnigenSamplingStrategy": [[37, 2, 1, "", "sample"]], "sweetpea.server": [[38, 4, 1, "", "build_cnf"], [38, 4, 1, "", "is_cnf_still_sat"]], "sweetpea.tests": [[40, 0, 0, "-", "sampling_strategies"], [45, 0, 0, "-", "test_backend"], [46, 0, 0, "-", "test_blocks"], [47, 0, 0, "-", "test_combinatorics"], [48, 0, 0, "-", "test_constraints"], [49, 0, 0, "-", "test_constraints_tss"], [50, 0, 0, "-", "test_derivation_processor"], [51, 0, 0, "-", "test_derivation_processor_multi_argument_transition"], [52, 0, 0, "-", "test_derivation_processor_tss"], [53, 0, 0, "-", "test_design_graph"], [54, 0, 0, "-", "test_design_partitions"], [55, 0, 0, "-", "test_encoding_diagram"], [56, 0, 0, "-", "test_internal"], [57, 0, 0, "-", "test_logic"], [58, 0, 0, "-", "test_primitives"], [59, 0, 0, "-", "test_sweetpea"], [60, 0, 0, "-", "test_utils"]], "sweetpea.tests.sampling_strategies": [[41, 0, 0, "-", "test_base_strategy"], [42, 0, 0, "-", "test_guided"], [43, 0, 0, "-", "test_uc_solution_enumerator"], [44, 0, 0, "-", "test_uniform_combinatoric"]], "sweetpea.tests.sampling_strategies.test_base_strategy": [[41, 4, 1, "", "test_decode"], [41, 4, 1, "", "test_decode_with_general_window"], [41, 4, 1, "", "test_decode_with_transition"], [41, 4, 1, "", "test_decode_with_transition_and_only_positive_variables"]], "sweetpea.tests.sampling_strategies.test_guided": [[42, 4, 1, "", "test_committed_to_solution"]], "sweetpea.tests.sampling_strategies.test_uc_solution_enumerator": [[43, 4, 1, "", "test_generate_crossing_instances"], [43, 4, 1, "", "test_generate_sample_basic_stroop"], [43, 4, 1, "", "test_generate_sample_basic_stroop_uneven_colors"], [43, 4, 1, "", "test_generate_sample_basic_stroop_variation"], [43, 4, 1, "", "test_generate_source_combinations"]], "sweetpea.tests.sampling_strategies.test_uniform_combinatoric": [[44, 4, 1, "", "test_constraint_violation"], [44, 4, 1, "", "test_example_counts"], [44, 4, 1, "", "test_validate_accepts_basic_factors"], [44, 4, 1, "", "test_validate_accepts_derived_factors_with_simple_windows"], [44, 4, 1, "", "test_validate_rejects_derived_factors_with_complex_windows"], [44, 4, 1, "", "test_validate_rejects_exclude_constraints"]], "sweetpea.tests.test_backend": [[45, 4, 1, "", "test_low_level_request_validation"]], "sweetpea.tests.test_blocks": [[46, 4, 1, "", "no_fn"], [46, 4, 1, "", "test_block_get_variable"], [46, 4, 1, "", "test_build_variable_list_for_complex_factors"], [46, 4, 1, "", "test_build_variable_list_for_simple_factors"], [46, 4, 1, "", "test_build_variable_list_for_three_derived_levels"], [46, 4, 1, "", "test_factor_variables_for_trial"], [46, 4, 1, "", "test_factor_variables_for_trial_with_expanded_crossing"], [46, 4, 1, "", "test_fully_cross_block_crossing_size_with_exclude"], [46, 4, 1, "", "test_fully_cross_block_crossing_size_with_overlapping_exclude"], [46, 4, 1, "", "test_fully_cross_block_decode_variable"], [46, 4, 1, "", "test_fully_cross_block_decode_variable_with_general_window"], [46, 4, 1, "", "test_fully_cross_block_decode_variable_with_transition_first"], [46, 4, 1, "", "test_fully_cross_block_first_variable_for_factor"], [46, 4, 1, "", "test_fully_cross_block_first_variable_for_factor_with_color3"], [46, 4, 1, "", "test_fully_cross_block_grid_variables"], [46, 4, 1, "", "test_fully_cross_block_should_copy_input_lists"], [46, 4, 1, "", "test_fully_cross_block_trials_per_sample"], [46, 4, 1, "", "test_fully_cross_block_trials_per_sample_with_transition_in_crossing"], [46, 4, 1, "", "test_fully_cross_block_variables_for_factor"], [46, 4, 1, "", "test_fully_cross_block_variables_per_sample"], [46, 4, 1, "", "test_fully_cross_block_variables_per_trial"], [46, 4, 1, "", "test_has_factor"], [46, 4, 1, "", "test_variable_list_for_trial"], [46, 4, 1, "", "yes_fn"]], "sweetpea.tests.test_combinatorics": [[47, 4, 1, "", "test_compute_jth_combination"], [47, 4, 1, "", "test_compute_jth_inversion_sequence"], [47, 4, 1, "", "test_construct_permutation"], [47, 4, 1, "", "test_extract_components"]], "sweetpea.tests.test_constraints": [[48, 4, 1, "", "test_atmostkinarow"], [48, 4, 1, "", "test_atmostkinarow_disallows_k_of_zero"], [48, 4, 1, "", "test_atmostkinarow_validate"], [48, 4, 1, "", "test_atmostkinarow_with_multiple_transitions"], [48, 4, 1, "", "test_atmostkinarow_with_transition"], [48, 4, 1, "", "test_consistency"], [48, 4, 1, "", "test_consistency_with_general_window"], [48, 4, 1, "", "test_consistency_with_multiple_transitions"], [48, 4, 1, "", "test_consistency_with_transition"], [48, 4, 1, "", "test_consistency_with_transition_first_and_uneven_level_lengths"], [48, 4, 1, "", "test_derivation"], [48, 4, 1, "", "test_derivation_with_general_window"], [48, 4, 1, "", "test_derivation_with_multiple_transitions"], [48, 4, 1, "", "test_derivation_with_three_level_transition"], [48, 4, 1, "", "test_derivation_with_transition"], [48, 4, 1, "", "test_exactlykinarow"], [48, 4, 1, "", "test_exactlykinarow_disallows_k_of_zero"], [48, 4, 1, "", "test_exclude"], [48, 4, 1, "", "test_exclude_with_general_window"], [48, 4, 1, "", "test_exclude_with_reduced_crossing"], [48, 4, 1, "", "test_exclude_with_three_derived_levels"], [48, 4, 1, "", "test_exclude_with_transition"], [48, 4, 1, "", "test_fully_cross_simple"], [48, 4, 1, "", "test_fully_cross_with_constraint"], [48, 4, 1, "", "test_fully_cross_with_transition_in_crossing"], [48, 4, 1, "", "test_fully_cross_with_transition_in_design"], [48, 4, 1, "", "test_fully_cross_with_uncrossed_simple_factors"], [48, 4, 1, "", "test_kinarow_with_bad_factor"], [48, 4, 1, "", "test_nomorethankinarow_sugar"]], "sweetpea.tests.test_constraints_tss": [[49, 4, 1, "", "color_motion_congruent"], [49, 4, 1, "", "color_motion_incongruent"], [49, 4, 1, "", "test_derivation_with_unusual_order"], [49, 4, 1, "", "test_fully_cross_with_three_factors"]], "sweetpea.tests.test_derivation_processor": [[50, 4, 1, "", "test_generate_argument_list_with_transition"], [50, 4, 1, "", "test_generate_argument_list_with_within_trial"], [50, 4, 1, "", "test_generate_derivations_should_produce_warning_if_some_level_is_unreachable"], [50, 4, 1, "", "test_generate_derivations_should_raise_error_if_fn_doesnt_return_a_boolean"], [50, 4, 1, "", "test_generate_derivations_should_raise_error_if_some_factor_matches_multiple_levels"], [50, 4, 1, "", "test_generate_derivations_transition"], [50, 4, 1, "", "test_generate_derivations_with_multiple_transitions"], [50, 4, 1, "", "test_generate_derivations_with_window"], [50, 4, 1, "", "test_generate_derivations_within_trial"], [50, 4, 1, "", "test_shift_window"], [50, 4, 1, "", "two_con"], [50, 4, 1, "", "two_not_con"]], "sweetpea.tests.test_derivation_processor_multi_argument_transition": [[51, 4, 1, "", "one_different"], [51, 4, 1, "", "other_different"], [51, 4, 1, "", "test_generate_derivations"], [51, 4, 1, "", "test_shift_window"]], "sweetpea.tests.test_derivation_processor_tss": [[52, 4, 1, "", "color_motion_congruent"], [52, 4, 1, "", "color_motion_incongruent"], [52, 4, 1, "", "response_left"], [52, 4, 1, "", "response_right"], [52, 4, 1, "", "test_generate_derivations_when_derived_factor_precedes_dependencies"], [52, 4, 1, "", "test_generate_derivations_with_transition_that_depends_on_derived_levels"]], "sweetpea.tests.test_design_graph": [[53, 4, 1, "", "test_basic_graph"], [53, 4, 1, "", "test_graph_paths"]], "sweetpea.tests.test_design_partitions": [[54, 4, 1, "", "test_get_crossed_factors"], [54, 4, 1, "", "test_get_crossed_factors_derived"], [54, 4, 1, "", "test_get_uncrossed_basic_factors"], [54, 4, 1, "", "test_get_uncrossed_basic_independent_factors"], [54, 4, 1, "", "test_get_uncrossed_basic_source_factors"], [54, 4, 1, "", "test_get_uncrossed_derived_factors"]], "sweetpea.tests.test_encoding_diagram": [[55, 4, 1, "", "test_generate_encoding_diagram"], [55, 4, 1, "", "test_generate_encoding_diagram_with_constraint_and_multiple_transitions"], [55, 4, 1, "", "test_generate_encoding_diagram_with_constraint_and_multiple_transitions_in_different_order"], [55, 4, 1, "", "test_generate_encoding_diagram_with_transition"], [55, 4, 1, "", "test_generate_encoding_diagram_with_window_with_stride"], [55, 4, 1, "", "test_generate_encoding_diagram_with_windows"]], "sweetpea.tests.test_internal": [[56, 4, 1, "", "test_get_all_external_level_names"], [56, 4, 1, "", "test_intersperse"]], "sweetpea.tests.test_logic": [[57, 4, 1, "", "test_apply_demorgan"], [57, 4, 1, "", "test_cnf_to_json"], [57, 4, 1, "", "test_distribute_ors_naive"], [57, 4, 1, "", "test_distribute_ors_switching"], [57, 4, 1, "", "test_eliminate_iff"], [57, 4, 1, "", "test_to_cnf_naive"], [57, 4, 1, "", "test_to_cnf_switching"], [57, 4, 1, "", "test_to_cnf_tseitin"], [57, 4, 1, "", "test_tseitin_cache"], [57, 4, 1, "", "test_tseitin_rep_and"], [57, 4, 1, "", "test_tseitin_rep_if"], [57, 4, 1, "", "test_tseitin_rep_iff"], [57, 4, 1, "", "test_tseitin_rep_not"], [57, 4, 1, "", "test_tseitin_rep_or"], [57, 4, 1, "", "test_tseitin_rep_variables"]], "sweetpea.tests.test_primitives": [[58, 4, 1, "", "no_fn"], [58, 4, 1, "", "test_base_window_validation"], [58, 4, 1, "", "test_derived_level_argument_list_expansion"], [58, 4, 1, "", "test_derived_level_equality"], [58, 4, 1, "", "test_derived_level_get_dependent_cross_product"], [58, 4, 1, "", "test_derived_level_get_dependent_cross_product_with_nesting"], [58, 4, 1, "", "test_derived_level_validation"], [58, 4, 1, "", "test_else_level"], [58, 4, 1, "", "test_factor_applies_to_trial"], [58, 4, 1, "", "test_factor_get_level"], [58, 4, 1, "", "test_factor_has_complex_window"], [58, 4, 1, "", "test_factor_is_derived"], [58, 4, 1, "", "test_factor_validation"], [58, 4, 1, "", "yes_fn"]], "sweetpea.tests.test_utils": [[60, 4, 1, "", "get_level_from_name"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:property", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"sweetpea": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 70, 71], "api": 0, "document": [0, 64, 66], "content": [0, 61, 62, 67, 71], "packag": [1, 7, 10, 14, 32, 39, 40, 69], "todo": 1, "subpackag": [1, 7, 10, 39], "submodul": [1, 7, 10, 14, 32, 39, 40], "backend": 2, "modul": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67], "base_constraint": 3, "block": [4, 66, 70], "combinator": 5, "constraint": [6, 70], "core": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "data": 7, "represent": 7, "extern": 7, "util": [7, 21], "us": [7, 17, 65, 67, 70], "function": [7, 67], "class": [7, 67], "binari": 8, "cnf": 9, "gener": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 67], "is_satisfi": 11, "sample_non_uniform": 12, "sample_uniform": 13, "tool": [14, 15, 16, 17, 18, 19, 20], "cryptominisat": 15, "docker_util": 16, "execut": 17, "thi": 17, "As": 17, "script": 17, "return_cod": 18, "tool_error": 19, "unigen": [20, 37], "simple_sequ": 22, "test": [23, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "derivation_processor": 24, "design_graph": 25, "design_partit": 26, "encoding_diagram": 27, "intern": 28, "logic": 29, "metric": 30, "primit": 31, "A": [31, 70], "note": [31, 66, 67], "deprec": 31, "sampling_strategi": [32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44], "base": 33, "guid": [34, 61, 64, 66, 67], "non_uniform": 35, "uniform_combinator": 36, "server": 38, "test_base_strategi": 41, "test_guid": 42, "test_uc_solution_enumer": 43, "test_uniform_combinator": 44, "test_backend": 45, "test_block": 46, "test_combinator": 47, "test_constraint": 48, "test_constraints_tss": 49, "test_derivation_processor": 50, "test_derivation_processor_multi_argument_transit": 51, "test_derivation_processor_tss": 52, "test_design_graph": 53, "test_design_partit": 54, "test_encoding_diagram": 55, "test_intern": 56, "test_log": 57, "test_primit": 58, "test_sweetpea": 59, "test_util": 60, "contribut": [62, 64, 69], "develop": [63, 69], "configur": 63, "your": 63, "environ": 63, "instal": [63, 64, 69], "depend": [63, 64], "repositori": 63, "organ": 63, "workflow": 63, "pull": 63, "request": 63, "build": [64, 70], "automat": 64, "vs": 64, "manual": [64, 69], "style": [64, 66, 67], "github": 65, "issu": 65, "tracker": 65, "python": [66, 67, 69], "pep": 66, "8": 66, "maximum": 66, "line": 66, "length": 66, "blank": 66, "import": 66, "string": 66, "quot": 66, "trail": 66, "comma": 66, "comment": 66, "inlin": 66, "type": 66, "check": 66, "lint": 66, "overrid": 66, "restructuredtext": 67, "role": 67, "direct": 67, "commonli": 67, "link": 67, "In": 67, "docstr": 67, "code": 67, "attribut": 67, "factori": 68, "experi": [68, 70], "design": 68, "factor": [68, 70], "fun": 68, "fact": 68, "level": [68, 70], "exampl": 68, "deriv": [68, 70], "basic": 68, "window": 68, "transit": 68, "within": 68, "trial": [68, 70], "glossari": 68, "setup": 69, "autom": 69, "from": 69, "index": 69, "sourc": 69, "simpl": 70, "stroop": 70, "effect": 70, "featur": 70, "recap": 70, "creation": 70, "synthesi": 70, "work": 70, "With": 70, "congruenc": 70}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 56}})